(this.webpackJsonpjavascript=this.webpackJsonpjavascript||[]).push([[0],{111:function(e,t,n){},114:function(e,t,n){},115:function(e,t,n){},116:function(e,t,n){"use strict";n.r(t);var i=n(1),r=n.n(i),a=n(61),s=n.n(a),c=(n(111),n(0)),o=function(){return Object(c.jsxs)("section",{className:"Section Section1",children:[Object(c.jsx)("h2",{children:"Prelude: Boolean Constraints and Their Solvers"}),Object(c.jsxs)("p",{children:[Object(c.jsxs)("a",{href:"https://en.wikipedia.org/wiki/Boolean_satisfiability_problem",children:[Object(c.jsx)("span",{className:"initial",children:"S"}),"atifiability of boolean constraints"]}),' (often referred as "SAT") is a central topic of computational complexity. It is NP-complete, so it can encode any nondeterministic polynomial-time problems with at most polynomially larger cost, which includes integer factorization, ',Object(c.jsx)("a",{href:"https://en.wikipedia.org/wiki/Subset_sum_problem",children:"subset sum problem"}),", ",Object(c.jsx)("a",{href:"https://en.wikipedia.org/wiki/Travelling_salesman_problem",children:"travelling sales man problem"}),", ",Object(c.jsx)("a",{href:"https://en.wikipedia.org/wiki/Sudoku",children:"Sudoku"}),", and so on. These nondeterministic polynomial-time problems are often found in more realistic applications, for example, Automated Deduction, Computer-Aided Design (CAD), and Artificial Intelligence. With its importance, SAT solving algorithm has been discussed for a long time since Davis and Putnam","'","s work on 1960",Object(c.jsx)("a",{className:"footnote",href:"#ref-1",children:"1"}),". Modern SAT solvers, including ",Object(c.jsx)("a",{href:"http://minisat.se/",children:"MiniSAT"})," and ",Object(c.jsx)("a",{href:"https://www.labri.fr/perso/lsimon/glucose/",children:"Glucose"})," show incredible performance even on large problems with millions of boolean variables on many industrial uses, and there are still researches going on to improve the performance even further."]}),Object(c.jsxs)("section",{className:"Subsection Subsection1-1",children:[Object(c.jsx)("h3",{children:"What SAT Solver Actually Solves?"}),Object(c.jsx)("p",{children:"The question of interest is like the following:"}),Object(c.jsxs)("blockquote",{children:["Suppose that we have boolean variables: ",Object(c.jsxs)("var",{children:["b",Object(c.jsx)("sub",{children:"1"})]}),", ",Object(c.jsxs)("var",{children:["b",Object(c.jsx)("sub",{children:"2"})]}),", \u2026 , ",Object(c.jsxs)("var",{children:["b",Object(c.jsx)("sub",{children:"n"})]}),", and their constraints obtained by applying logical and (logical conjunction, \u2227), logical or (logical disjunction, \u2228), and logical negation (\xac) operations on them. Will there be an assignment for those boolean variables so that they satisfy all the given constraints?"]}),Object(c.jsx)("p",{children:"SAT solvers can answer whether there is such an assignment or not, and actually construct the assignment if it exists."}),Object(c.jsxs)("section",{className:"side-node",children:[Object(c.jsx)("h4",{children:"Side note:"}),Object(c.jsxs)("p",{className:"indent",children:["In many SAT solvers, the requirements on constraints are often more strict: The conjunction of all constraints should be in the ",Object(c.jsx)("a",{href:"https://en.wikipedia.org/wiki/Conjunctive_normal_form",children:"Conjunctive Normal Form (CNF)"}),". For example,"]}),Object(c.jsxs)("blockquote",{children:["(",Object(c.jsxs)("var",{children:["b",Object(c.jsx)("sub",{children:"1"})]})," \u2228 ",Object(c.jsxs)("var",{children:["b",Object(c.jsx)("sub",{children:"2"})]}),") \u2227 ",Object(c.jsxs)("var",{children:["b",Object(c.jsx)("sub",{children:"3"})]}),Object(c.jsx)("br",{}),Object(c.jsxs)("var",{children:["b",Object(c.jsx)("sub",{children:"2"})]})," \u2227 (\xac",Object(c.jsxs)("var",{children:["b",Object(c.jsx)("sub",{children:"3"})]})," \u2228 ",Object(c.jsxs)("var",{children:["b",Object(c.jsx)("sub",{children:"4"})]}),")"]}),Object(c.jsx)("p",{children:"is a valid set of constraints, but"}),Object(c.jsxs)("blockquote",{children:[Object(c.jsxs)("var",{children:["b",Object(c.jsx)("sub",{children:"1"})]})," \u2228 (",Object(c.jsxs)("var",{children:["b",Object(c.jsx)("sub",{children:"2"})]})," \u2227 ",Object(c.jsxs)("var",{children:["b",Object(c.jsx)("sub",{children:"3"})]}),")",Object(c.jsx)("br",{}),"\xac(",Object(c.jsxs)("var",{children:["b",Object(c.jsx)("sub",{children:"2"})]})," \u2228 (",Object(c.jsxs)("var",{children:["b",Object(c.jsx)("sub",{children:"3"})]})," \u2227 ",Object(c.jsxs)("var",{children:["b",Object(c.jsx)("sub",{children:"4"})]}),"))"]}),Object(c.jsxs)("p",{children:["is not because there is a disjunction (\u2228) that contains a conjunction (\u2227) and a negation (\xac) is applied on a non-variable expression. However, there is ",Object(c.jsx)("a",{href:"https://en.wikipedia.org/wiki/Tseytin_transformation",children:"an efficient translation between non-CNF constraints and CNF constraints"}),", so this is more about how one encodes their problems."]})]})]}),Object(c.jsxs)("section",{className:"Subsection Subsection1-2",children:[Object(c.jsx)("h3",{children:"How SAT Solver Solves SAT Problems Efficiently?"}),'One of the important algorithm that allows SAT solvers to "learn" from its trial-and-error is ',Object(c.jsx)("a",{href:"https://en.wikipedia.org/wiki/Conflict-driven_clause_learning",children:"Conflict Deriven Clause Learning (CDCL)"}),". ",Object(c.jsx)("a",{href:"https://cse442-17f.github.io/Conflict-Driven-Clause-Learning/",children:"This interactive tutorial"})," explains what CDCL is and how SAT solvers use them. (This article is also deeply inspired from the tutorial!) In this article, we will not use any complex optimization other than CDCL, but modern SAT solvers employ many other optimizations, including 2 watched literals",Object(c.jsx)("a",{className:"footnote",href:"#ref-2",children:"2"}),", Variable State Independent Decaying Sum",Object(c.jsx)("a",{className:"footnote",href:"#ref-2",children:"2"}),", and Restart",Object(c.jsx)("a",{className:"footnote",href:"#ref-3",children:"3"}),"."]})]})},l=n(3),d=function(e){var t=r.a.useState(void 0),n=Object(l.a)(t,2),i=n[0],a=n[1];return r.a.useEffect((function(){setTimeout((function(){a(window.makeSatyrosAPI(e))}),500)}),[]),i},h=n(2),j=n(26),b=n(62),u=h.n(),x=h.n();function m(e,t,n,i){var r=e*n+t*i,a=Math.sqrt((e*e+t*t)*(n*n+i*i)),s=Math.acos(r/a);return e*i-t*n<0&&(s=-s),s}function f(e,t,n,i,r,a,s,c,o){var l,d,h,j,b,u=2*Math.PI;if(n<0&&(n=-n),i<0&&(i=-i),0===n||0===i)throw Error("rx and ry can not be 0");var x=Math.sin(r),f=Math.cos(r),O=(e-c)/2,p=(t-o)/2,v=(e+c)/2,g=(t+o)/2,k=f*O+x*p,w=f*p-x*O,y=k*k/(n*n)+w*w/(i*i);y>1&&(n*=Math.sqrt(y),i*=Math.sqrt(y));var T=n*i,S=n*w,C=i*k,F=S*S+C*C;if(!F)throw Error("start point can not be same as end point");var P=Math.sqrt(Math.abs((T*T-F)/F));a===s&&(P=-P);var A=P*S/i,N=-P*C/n;l=f*A-x*N+v,d=x*A+f*N+g;var M=(k-A)/n,I=(k+A)/n,D=(w-N)/i,E=(w+N)/i;for(h=m(1,0,M,D),j=m(M,D,-I,-E);j>u;)j-=u;for(;j<0;)j+=u;for(!1===s&&(j-=u),b=h+j;b>u;)b-=u;for(;b<0;)b+=u;return{cx:l,cy:d,startAngle:h,deltaAngle:j,endAngle:b,clockwise:!0===s}}var O=function(e){var t=e.width,n=e.height,i=e.nodes,a=e.links,s=r.a.useRef(null);return function(e){e.id;var t=e.width,n=e.height,i=e.nodes,a=e.links,s=e.ref,c=e.nodeId,o=e.nodeShape,l=e.nodeText,d=e.nodeFill,m=e.nodeFillNew,O=e.linkId,p=e.linkDistance,v=e.linkStroke,g=e.linkStrokeNew,k=e.linkStrokeActive,w=e.linkText,y=e.linkActive,T=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],S=8,C=h.j().force("collide",h.g(S)).force("charge",h.i().strength(-1e3).theta(.5)).force("link",h.h().id((function(e){return c(e)})).strength((function(e){return.01*p(e)})).distance(p)).force("x",h.k()).force("y",h.l()).force("limits",Object(b.a)().radius(5*S).x0(-t/2).x1(t/2).y0(-n/2).y1(n/2).cushionWidth(10*S).cushionStrength(1)).on("tick",q),F=r.a.useRef(null),P=r.a.useRef(null),A=r.a.useMemo((function(){return null!==o&&void 0!==o?o:function(e){return"circle"}}),[]),N=r.a.useMemo((function(){return null!==d&&void 0!==d?d:"#000"}),[]),M=r.a.useMemo((function(){return null!==m&&void 0!==m?m:"#000"}),[]),I=null!==v&&void 0!==v?v:"#000",D=null!==g&&void 0!==g?g:"#000",E=null!==k&&void 0!==k?k:D;function q(){null!==s&&null!==P.current&&(P.current.attr("transform",(function(e){var t=e.source.x,n=e.target.x,i=e.source.y,r=e.target.y;return"translate(".concat((t+n)/2,", ").concat((i+r)/2,")")})).select("path").attr("d",(function(e){var t=e.source.x,n=e.target.x,i=e.source.y,r=e.target.y,a=Math.hypot(n-t,r-i);return"M".concat((t-n)/2,",").concat((i-r)/2,"A").concat(a,",").concat(a," 0 0,1 ").concat((n-t)/2,",").concat((r-i)/2)})),P.current.selectChildren("text").attr("x",(function(e){var t=Math.hypot(e.target.x-e.source.x,e.target.y-e.source.y),n=f((e.source.x-e.target.x)/2,(e.source.y-e.target.y)/2,t,t,0,!1,!0,(e.target.x-e.source.x)/2,(e.target.y-e.source.y)/2);return(t+5)*Math.cos(n.startAngle+n.deltaAngle/2)+n.cx})).attr("y",(function(e){var t=Math.hypot(e.target.x-e.source.x,e.target.y-e.source.y),n=f((e.source.x-e.target.x)/2,(e.source.y-e.target.y)/2,t,t,0,!1,!0,(e.target.x-e.source.x)/2,(e.target.y-e.source.y)/2);return(t+5)*Math.sin(n.startAngle+n.deltaAngle/2)+n.cy}))),null!==s&&null!==F.current&&F.current.attr("transform",(function(e){return"translate(".concat(e.x,", ").concat(e.y,")")}))}function B(e){return h.c().on("start",(function(t){t.active||e.alphaTarget(.3).restart(),t.subject.fx=t.subject.x,t.subject.fy=t.subject.y})).on("drag",(function(e){e.subject.fx=e.x,e.subject.fy=e.y})).on("end",(function(t){t.active||e.alphaTarget(0),t.subject.fx=null,t.subject.fy=null}))}r.a.useEffect((function(){var e=h.t(s);return e.append("defs").append("marker").attr("id","arrow-new").attr("refX",12).attr("refY",4).attr("markerWidth",8).attr("markerHeight",8).attr("orient","auto").append("path").attr("d","M 0 0 8 4 0 8 2 4").attr("fill",D),e.append("defs").append("marker").attr("id","arrow").attr("refX",12).attr("refY",4).attr("markerWidth",8).attr("markerHeight",8).attr("orient","auto").append("path").attr("d","M 0 0 8 4 0 8 2 4").transition().duration(500).ease(h.f).duration(3e3).attrTween("fill",(function(){return h.m(D,I)})),P.current=e.append("g").selectChildren("g"),F.current=e.append("g").selectChildren("g"),function(){e.selectChildren().remove()}}),[s].concat(Object(j.a)(T))),r.a.useEffect((function(){var e=new Map(F.current.data().map((function(e){return[c(e),e]}))),t=i.map((function(t){return Object.assign(e.get(c(t))||{},t)})),n=a.map((function(e){return Object.assign({},e)})),r=!1,s=!1;F.current=F.current.data(t,(function(e){return c(e)})).join((function(e){e.size()>0&&(r=!0);var t=e.append("g").attr("opacity",0).attr("stroke","#333").attr("stroke-opacity",1).attr("stroke-width",0).attr("stroke-linecap","round").attr("stroke-linejoin","round");return t.transition().duration(500).ease(h.e).attr("opacity",1),void 0!==l&&t.append("text").each((function(e){u.set(this,l(e))})).text((function(e){return l(e)})).classed("node-text",!0).attr("y",-10).attr("text-anchor","middle").attr("stroke","#955").attr("stroke-width",1).clone(!0).lower().classed("node-text",!1).classed("node-text-shade",!0).attr("stroke","white").attr("stroke-width",3),t.append("rect").classed("node-shape",!0).attr("x",-S).attr("y",-S).attr("width",2*S).attr("height",2*S).attr("rx",(function(e){return"rect"===A(e)?0:S})).attr("fill",M).lower(),t}),(function(e){return e.each((function(e){var t=h.t(this).datum(e);if(t.transition().duration(500).ease(h.e).attr("opacity",1),void 0!==l){var n=!1;t.selectChildren("text.node-text").datum(e).text((function(e){var t=l(e);return u.get(this)!==t&&(u.set(this,t),n=!0),t})),n?t.selectChildren(".node-shape").datum(e).transition().duration(500).ease(h.e).attr("rx",(function(e){return"rect"===A(e)?0:S})).attr("fill",M):t.selectChildren(".node-shape").datum(e).transition().duration(500).ease(h.f).attr("rx",(function(e){return"rect"===A(e)?0:S})).attr("fill",N)}else t.selectChildren(".node-shape").datum(e).transition().duration(500).ease(h.f).attr("rx",(function(e){return"rect"===A(e)?0:S})).attr("fill",N)})),e})).call(B(C)),P.current=P.current.data(n,(function(e){return O(e)})).join((function(e){e.size()>0&&(s=!0);var t=e.append("g").attr("opacity",0).attr("fill",D).attr("stroke",D);return t.transition().duration(500).ease(h.e).attr("opacity",1),void 0!==w&&t.append("text").each((function(e){x.set(this,w(e))})).text(w).classed("link-text",!0).attr("text-anchor","middle").clone(!0).lower().classed("link-text",!1).classed("link-text-shade",!0).attr("stroke","white").attr("stroke-width",4),t.append("path").attr("fill","transparent").attr("stroke-width",1.5).attr("stroke-linecap","round").attr("marker-end","url(#arrow-new)").lower(),t}),(function(e){return e.each((function(e){var t=h.t(this).datum(e);if(t.transition().duration(500).ease(h.e).attr("opacity",1),void 0!==w){var n=!1;t.selectChildren("text.link-text").datum(e).text((function(e){var t=w(e);return x.get(this)!==t&&(x.set(this,t),n=!0),t})),n?(t.transition().duration(500).ease(h.e).attr("stroke",D),t.select("path").attr("marker-end","url(#arrow-new)")):void 0!==y&&y(e)?(t.transition().duration(500).ease(h.e).attr("stroke",E),t.select("path").attr("marker-end","url(#arrow-new)")):(t.transition().duration(500).ease(h.f).attr("stroke",I),t.select("path").attr("marker-end","url(#arrow)"))}else void 0!==y&&y(e)?(t.transition().duration(500).ease(h.f).attr("stroke",E),t.select("path").attr("marker-end","url(#arrow-new)")):(t.transition().duration(500).ease(h.f).attr("stroke",I),t.select("path").attr("marker-end","url(#arrow)"))})),e})),C.nodes(t),C.force("link").links(n),r||s?C.alpha(1).restart():C.alpha(0)}),[s,i,a].concat(Object(j.a)(T)))}({id:"bellman-ford",width:t,height:n,nodes:r.a.useMemo((function(){return i.map((function(e){var t=e.variable;return{id:null!==t&&void 0!==t?t:-1,distance:e.distance}}))}),[i]),links:r.a.useMemo((function(){return a.map((function(e){var t=e.startVertex,n=e.endVertex,i=e.weight,r=e.lastActive;return{id:"".concat(null!==t&&void 0!==t?t:-1,",").concat(null!==n&&void 0!==n?n:-1),source:null!==t&&void 0!==t?t:-1,target:null!==n&&void 0!==n?n:-1,weight:i,lastActive:r}}))}),[a]),ref:s.current,nodeId:function(e){return e.id},nodeText:function(e){return"".concat(-1===e.id?"min":0===e.id?"z":"x"+e.id," : ").concat(e.distance)},nodeFill:h.s[2],nodeFillNew:h.q[4],linkId:function(e){return e.id},linkActive:function(e){return e.lastActive},linkDistance:function(e){return 20},linkText:function(e){return"".concat(e.weight)},linkStroke:h.s[7],linkStrokeNew:h.q[7]}),Object(c.jsx)("svg",{width:t,height:n,viewBox:"".concat(-t/2," ").concat(-n/2," ").concat(t," ").concat(n),ref:s})},p=(n(4),function e(t,n){return Object.assign(v((function(){t(e(t,n))}),(function(){t(e(t,n))}),(function(){throw new Error("Why Result?!")})),n)}),v=function(e,t,n){return{Start:function(){},NegativeCyclePass:e,NegativeCycleFind:e,NegativeCycleCheck:e,PropagationEnd:e,PropagationNth:e,PropagationFindShorter:e,PropagationCheck:e,BacktraceComplete:t,BacktraceExhaustion:t,DecisionComplete:t,DecisionResult:t,BCPConflictDrivenClause:t,BCPConflict:t,BCPComplete:t,BCPUnitClause:t,Finish:n}},g=function e(t,n){return Object.assign(k((function(){t(e(t,n))}),(function(){t(e(t,n))}),(function(){throw new Error("Why Start?!")})),n)},k=function(e,t,n){return{Start:n,NegativeCyclePass:e,NegativeCycleFind:e,NegativeCycleCheck:e,PropagationEnd:e,PropagationNth:e,PropagationFindShorter:e,PropagationCheck:e,BacktraceComplete:t,BacktraceExhaustion:t,DecisionComplete:t,DecisionResult:t,BCPConflictDrivenClause:t,BCPConflict:t,BCPComplete:t,BCPUnitClause:t,Finish:function(){}}},w=function(e){switch(e){case"::<?":return"<";case"::<=?":return"\u2264";case"::>?":return">";case"::>=?":return"\u2265";case"::<>?":return"\u2260";case"::=?":return"="}},y=function(e){switch(3===e.length&&(e=[e[0],0,e[1],e[2]]),e[2]){case"::<?":return[[[e[0],e[1],Math.ceil(e[3]-1)]]];case"::<=?":return[[[e[0],e[1],Math.floor(e[3])]]];case"::>?":return[[[e[1],e[0],Math.ceil(-e[3]-1)]]];case"::>=?":return[[[e[1],e[0],Math.floor(-e[3])]]];case"::=?":return[[[e[0],e[1],Math.floor(e[3])]],[[e[1],e[0],Math.floor(-e[3])]]];case"::<>?":return[[[e[0],e[1],Math.ceil(e[3]-1)],[e[1],e[0],Math.ceil(-e[3]-1)]]]}},T=function(e){return Object(c.jsxs)(i.Fragment,{children:[0===e[0]?"z":Object(c.jsxs)(i.Fragment,{children:["x",Object(c.jsx)("sub",{children:e[0]})]})," - ",0===e[1]?"z":Object(c.jsxs)(i.Fragment,{children:["x",Object(c.jsx)("sub",{children:e[1]})]})," \u2264 ",e[2]]})},S=[[[1,2,"::<=?",4]],[[2,3,"::<=?",5]],[[3,1,"::<=?",-10]]],C=function(){var e=d(S),t=r.a.useState(0),n=Object(l.a)(t,2),i=n[0],a=n[1],s=r.a.useState([]),o=Object(l.a)(s,2),h=o[0],j=o[1],b=r.a.useState([]),u=Object(l.a)(b,2),x=u[0],m=u[1],f=r.a.useCallback((function(){e.getBellmanFordGraph((function(e,t){j(e),m(t)}))}),[e]),g=f,k=r.a.useCallback((function(){if(0===i)a((function(e){return e+1})),e.step(p((function(t){a((function(e){return e+1})),e.step(t)}),{DecisionComplete:function(){a((function(e){return e+1})),e.step(v(g,f,(function(){})))}}))}),[e,i,f,g]),w=r.a.useCallback((function(){e.reset(),a(0),j([]),m([])}),[e]);return void 0===e?null:Object(c.jsxs)("div",{style:{display:"block",width:640,margin:"0 auto"},children:[Object(c.jsx)("button",{disabled:0===i,onClick:w,children:"Reset"}),Object(c.jsx)("button",{disabled:3===i,onClick:k,children:"Construct"}),Object(c.jsx)("br",{}),Object(c.jsx)(O,{width:640,height:400,nodes:h,links:x})]})},F=[[[1,2,"::<=?",4]],[[2,3,"::<=?",5]],[[3,1,"::<=?",-10]]],P=function(){var e=d(F),t=r.a.useState(0),n=Object(l.a)(t,2),i=n[0],a=n[1],s=r.a.useState(!1),o=Object(l.a)(s,2),h=o[0],j=o[1],b=r.a.useState(!1),u=Object(l.a)(b,2),x=u[0],m=u[1],f=r.a.useState([]),v=Object(l.a)(f,2),k=v[0],w=v[1],y=r.a.useState([]),T=Object(l.a)(y,2),S=T[0],C=T[1],P=r.a.useCallback((function(){e.getBellmanFordGraph((function(e,t){w(e),C(t)}))}),[e]),A=r.a.useCallback((function(){e.getBellmanFordGraph((function(e,t){w(e),C(t)}))}),[e]),N=r.a.useCallback((function(){if(23===i);else a((function(e){return e+1})),e.step(p((function(t){a((function(e){return e+1})),e.step(t)}),{PropagationCheck:function(){console.log("PropagationCheck",i),[4,11,13].includes(i)?j(!0):P()},PropagationFindShorter:function(){console.log("PropagationFindShorter"),P()},PropagationEnd:function(){console.log("PropagationEnd",i),P()}}))}),[e,i,P]),M=r.a.useCallback((function(){if(4===i)a((function(e){return e-1})),e.undo(g((function(t){a((function(e){return e-1})),e.undo(t)}),{Start:function(){A()}}));else a((function(e){return e-1})),e.undo(g((function(t){a((function(e){return e-1})),e.undo(t)}),{PropagationCheck:function(){console.log("PropagationCheck",i),[6,14,15].includes(i)?m(!0):A()},PropagationFindShorter:function(){console.log("PropagationFindShorter"),A()},PropagationEnd:function(){console.log("PropagationEnd"),A()},Start:function(){console.log("Start"),A()}}))}),[e,i,A]),I=r.a.useCallback((function(){e.reset(),a(0),w([]),C([])}),[e]);return r.a.useEffect((function(){h&&(j(!1),N())}),[h,N]),r.a.useEffect((function(){x&&(m(!1),M())}),[x,M]),void 0===e?null:Object(c.jsxs)("div",{style:{display:"block",width:640,margin:"0 auto"},children:[Object(c.jsx)("button",{disabled:0===i,onClick:I,children:"Reset"}),Object(c.jsxs)("button",{disabled:0===i,onClick:M,children:["<"," Undo"]}),Object(c.jsxs)("button",{disabled:23===i,onClick:N,children:["Step ",">"]}),Object(c.jsx)("br",{}),Object(c.jsx)(O,{width:640,height:400,nodes:k,links:S})]})},A=[[[1,4,"::<=?",2]],[[1,2,"::<=?",4]],[[2,1,"::<=?",-4]],[[2,3,"::<=?",5]],[[3,4,"::<=?",-1]]],N=function(){var e=d(A),t=r.a.useState(0),n=Object(l.a)(t,2),i=n[0],a=n[1],s=r.a.useState(!1),o=Object(l.a)(s,2),h=o[0],j=o[1],b=r.a.useState(!1),u=Object(l.a)(b,2),x=u[0],m=u[1],f=r.a.useState([]),v=Object(l.a)(f,2),k=v[0],w=v[1],y=r.a.useState([]),T=Object(l.a)(y,2),S=T[0],C=T[1],F=r.a.useCallback((function(){e.getBellmanFordGraph((function(e,t){w(e),C(t)}))}),[e]),P=r.a.useCallback((function(){e.getBellmanFordGraph((function(e,t){w(e),C(t)}))}),[e]),N=r.a.useCallback((function(){switch(i){case 0:a((function(e){return e+1})),e.step(p((function(t){a((function(e){return e+1})),e.step(t)}),{PropagationCheck:function(){console.log("PropagationCheck",i),F()}}));break;case 51:break;default:a((function(e){return e+1})),e.step(p((function(t){a((function(e){return e+1})),e.step(t)}),{PropagationFindShorter:function(){console.log("PropagationFindShorter",i),F()},Finish:function(){console.log("Finish",i),F()}}))}}),[e,i,F]),M=r.a.useCallback((function(){if(4===i)a((function(e){return e-1})),e.undo(g((function(t){a((function(e){return e-1})),e.undo(t)}),{Start:function(){P()}}));else a((function(e){return e-1})),e.undo(g((function(t){a((function(e){return e-1})),e.undo(t)}),{PropagationCheck:function(){console.log("PropagationCheck"),5!==i?m(!0):P()},PropagationFindShorter:function(){console.log("PropagationFindShorter",i),P()},Start:function(){console.log("Start",i),P()}}))}),[e,i,P]),I=r.a.useCallback((function(){e.reset(),a(0),w([]),C([])}),[e]);return r.a.useEffect((function(){h&&(j(!1),N())}),[h,N]),r.a.useEffect((function(){x&&(m(!1),M())}),[x,M]),console.log(i),void 0===e?null:Object(c.jsxs)("div",{style:{display:"block",width:640,margin:"0 auto"},children:[Object(c.jsx)("button",{disabled:0===i,onClick:I,children:"Reset"}),Object(c.jsxs)("button",{disabled:0===i,onClick:M,children:["<"," Undo"]}),Object(c.jsxs)("button",{disabled:51===i,onClick:N,children:["Step to next distance update ",">"]}),Object(c.jsx)("br",{}),Object(c.jsx)(O,{width:640,height:400,nodes:k,links:S})]})},M=n(25),I=function(e){var t=e.width,n=e.height,i=e.expressible,a=e.processed,s=r.a.useRef(null),o=30,l=n/t,d=h.p([-5,5],[-t/2+o,t/2-o]),j=h.p([-5*l,5*l],[n/2-o,-n/2+o]),b=Object(M.a)(3===i.length?i[1]:i[2]),u=Object(M.a)(a);return r.a.useEffect((function(){var e=h.t(s.current);e.append("clipPath").attr("id","graph-area").append("rect").attr("x",-t/2+o).attr("y",-n/2+o).attr("width",t-60).attr("height",n-60);var i=h.a(d).ticks(10).tickSizeInner(60-n).tickSizeOuter(0).tickPadding(15),r=h.b(j).ticks(7).tickSizeInner(60-t).tickSizeOuter(0).tickPadding(15),a=e.append("g").attr("transform","translate(0, ".concat(n/2-o,")")).call(i),c=e.append("g").attr("transform","translate(".concat(-t/2+o,", 0)")).call(r);return a.call((function(e){e.selectAll(".tick line").attr("stroke",h.s[7]),e.selectAll(".tick").lower()})),c.call((function(e){e.selectAll(".tick line").attr("stroke",h.s[7]),e.selectAll(".tick").lower()})),e.append("line").attr("x1",-.5).attr("y1",-n/2+o).attr("x2",-.5).attr("y2",n/2-o).attr("stroke","black").attr("stroke-width",1),e.append("line").attr("x1",-t/2+o).attr("y1",.5).attr("x2",t/2-o).attr("y2",.5).attr("stroke","black").attr("stroke-width",1),e.append("g").classed("expression-graph",!0),function(){e.selectAll().remove()}}),[t,n,d,j]),r.a.useEffect((function(){var e=h.t(s.current).selectChild("g.expression-graph").selectChildren("path.expressible").data([0]).join("path").classed("expressible",!0).attr("clip-path","url(#graph-area)").transition().duration(300).ease(h.d).attr("stroke-width",3).attr("fill",h.q[3]);e=u!==a||a||b===(3===i.length?i[1]:i[2])?e.attr("opacity",a?0:.8):e.transition().ease(h.d).duration(150).attr("opacity",0).transition().ease(h.d).delay(150).duration(150).attr("opacity",.8);var t=h.o();if(3===i.length)switch(i[1]){case"::<=?":t.moveTo(d(i[2]),j(j.domain()[0]-10)),t.lineTo(d(i[2]),j(j.domain()[1]+10)),t.lineTo(d(d.domain()[0]-10),j(j.domain()[1]+10)),t.lineTo(d(d.domain()[0]-10),j(j.domain()[0]-10)),t.closePath(),e.attr("d",t.toString()).attr("stroke",h.r[5]);break;case"::<?":t.moveTo(d(i[2]),j(j.domain()[0]-10)),t.lineTo(d(i[2]),j(j.domain()[1]+10)),t.lineTo(d(d.domain()[0]-10),j(j.domain()[1]+10)),t.lineTo(d(d.domain()[0]-10),j(j.domain()[0]-10)),t.closePath(),e.attr("d",t.toString()).attr("stroke","#FFF");break;case"::>=?":t.moveTo(d(i[2]),j(j.domain()[0]-10)),t.lineTo(d(i[2]),j(j.domain()[1]+10)),t.lineTo(d(d.domain()[1]+10),j(j.domain()[1]+10)),t.lineTo(d(d.domain()[1]+10),j(j.domain()[0]-10)),t.closePath(),e.attr("d",t.toString()).attr("stroke",h.r[5]);break;case"::>?":t.moveTo(d(i[2]),j(j.domain()[0]-10)),t.lineTo(d(i[2]),j(j.domain()[1]+10)),t.lineTo(d(d.domain()[1]+10),j(j.domain()[1]+10)),t.lineTo(d(d.domain()[1]+10),j(j.domain()[0]-10)),t.closePath(),e.attr("d",t.toString()).attr("stroke","#FFF");break;case"::=?":t.moveTo(d(i[2]),j(j.domain()[0]-10)),t.lineTo(d(i[2]),j(j.domain()[1]+10)),e.attr("d",t.toString()).attr("stroke",h.r[5]);break;case"::<>?":t.moveTo(d(i[2]),j(j.domain()[0]-10)),t.lineTo(d(i[2]),j(j.domain()[1]+10)),t.lineTo(d(d.domain()[0]-10),j(j.domain()[1]+10)),t.lineTo(d(d.domain()[0]-10),j(j.domain()[0]-10)),t.closePath(),t.moveTo(d(i[2]),j(j.domain()[0]-10)),t.lineTo(d(i[2]),j(j.domain()[1]+10)),t.lineTo(d(d.domain()[1]+10),j(j.domain()[1]+10)),t.lineTo(d(d.domain()[1]+10),j(j.domain()[0]-10)),t.closePath(),e.attr("d",t.toString()).attr("stroke","#FFF")}else switch(i[2]){case"::<=?":t.moveTo(d(d.domain()[0]-10),j(d.domain()[0]-10-i[3])),t.lineTo(d(d.domain()[1]+10),j(d.domain()[1]+10-i[3])),t.lineTo(d(d.domain()[0]-10),j(j.domain()[1]+10)),t.closePath(),e.attr("d",t.toString()).attr("stroke",h.r[5]);break;case"::<?":t.moveTo(d(d.domain()[0]-10),j(d.domain()[0]-10-i[3])),t.lineTo(d(d.domain()[1]+10),j(d.domain()[1]+10-i[3])),t.lineTo(d(d.domain()[0]-10),j(j.domain()[1]+10)),t.closePath(),e.attr("d",t.toString()).attr("stroke","#FFF");break;case"::>=?":t.moveTo(d(d.domain()[0]-10),j(d.domain()[0]-10-i[3])),t.lineTo(d(d.domain()[1]+10),j(d.domain()[1]+10-i[3])),t.lineTo(d(d.domain()[1]+10),j(j.domain()[0]-10)),t.closePath(),e.attr("d",t.toString()).attr("stroke",h.r[5]);break;case"::>?":t.moveTo(d(d.domain()[0]-10),j(d.domain()[0]-10-i[3])),t.lineTo(d(d.domain()[1]+10),j(d.domain()[1]+10-i[3])),t.lineTo(d(d.domain()[1]+10),j(j.domain()[0]-10)),t.closePath(),e.attr("d",t.toString()).attr("stroke","#FFF");break;case"::=?":t.moveTo(d(d.domain()[0]-10),j(d.domain()[0]-10-i[3])),t.lineTo(d(d.domain()[1]+10),j(d.domain()[1]+10-i[3])),e.attr("d",t.toString()).attr("stroke",h.r[5]);break;case"::<>?":t.moveTo(d(d.domain()[0]-10),j(d.domain()[0]-10-i[3])),t.lineTo(d(d.domain()[1]+10),j(d.domain()[1]+10-i[3])),t.lineTo(d(d.domain()[0]-10),j(j.domain()[1]+10)),t.closePath(),t.moveTo(d(d.domain()[0]-10),j(d.domain()[0]-10-i[3])),t.lineTo(d(d.domain()[1]+10),j(d.domain()[1]+10-i[3])),t.lineTo(d(d.domain()[1]+10),j(j.domain()[0]-10)),t.closePath(),e.attr("d",t.toString()).attr("stroke","#FFF")}}),[i,a,b,u,d,j]),r.a.useEffect((function(){var e=h.t(s.current).selectChild("g.expression-graph").selectChildren("path.expressed").data([0]).join("path").classed("expressed",!0).attr("clip-path","url(#graph-area)").transition().duration(300).ease(h.d).attr("stroke-width",3).attr("fill",h.q[1]).attr("stroke",h.r[3]);e=u===a&&a&&b!==(3===i.length?i[1]:i[2])?e.transition().ease(h.d).duration(150).attr("opacity",0).transition().ease(h.d).delay(150).duration(150).attr("opacity",.8):e.attr("opacity",a?.8:0);var t=h.o(),n=y(i);1===n.length?1===n[0].length?0===n[0][0][0]?(t.moveTo(d(-n[0][0][2]),j(j.domain()[0])),t.lineTo(d(-n[0][0][2]),j(j.domain()[1])),t.lineTo(d(d.domain()[1]+10),j(j.domain()[1]+10)),t.lineTo(d(d.domain()[1]+10),j(j.domain()[0]-10)),t.closePath(),e.attr("d",t.toString())):0===n[0][0][1]?(t.moveTo(d(n[0][0][2]),j(j.domain()[0])),t.lineTo(d(n[0][0][2]),j(j.domain()[1])),t.lineTo(d(d.domain()[0]-10),j(j.domain()[1]+10)),t.lineTo(d(d.domain()[0]-10),j(j.domain()[0]-10)),t.closePath(),e.attr("d",t.toString())):1===n[0][0][0]?(t.moveTo(d(d.domain()[0]-10),j(d.domain()[0]-10-n[0][0][2])),t.lineTo(d(d.domain()[1]+10),j(d.domain()[1]+10-n[0][0][2])),t.lineTo(d(d.domain()[0]-10),j(j.domain()[1]+10)),t.closePath(),e.attr("d",t.toString())):(t.moveTo(d(d.domain()[0]-10),j(d.domain()[0]-10+n[0][0][2])),t.lineTo(d(d.domain()[1]+10),j(d.domain()[1]+10+n[0][0][2])),t.lineTo(d(d.domain()[1]+10),j(j.domain()[0]-10)),t.closePath(),e.attr("d",t.toString())):0===n[0][0][0]?(t.moveTo(d(n[0][0][2]),j(j.domain()[0])),t.lineTo(d(n[0][0][2]),j(j.domain()[1])),t.lineTo(d(d.domain()[0]-10),j(j.domain()[1]+10)),t.lineTo(d(d.domain()[0]-10),j(j.domain()[0]-10)),t.closePath(),t.moveTo(d(-n[0][1][2]),j(j.domain()[0])),t.lineTo(d(-n[0][1][2]),j(j.domain()[1])),t.lineTo(d(d.domain()[1]+10),j(j.domain()[1]+10)),t.lineTo(d(d.domain()[1]+10),j(j.domain()[0]-10)),t.closePath(),e.attr("d",t.toString())):0===n[0][0][1]?(t.moveTo(d(-n[0][0][2]),j(j.domain()[0])),t.lineTo(d(-n[0][0][2]),j(j.domain()[1])),t.lineTo(d(d.domain()[1]+10),j(j.domain()[1]+10)),t.lineTo(d(d.domain()[1]+10),j(j.domain()[0]-10)),t.closePath(),t.moveTo(d(n[0][1][2]),j(j.domain()[0])),t.lineTo(d(n[0][1][2]),j(j.domain()[1])),t.lineTo(d(d.domain()[0]-10),j(j.domain()[1]+10)),t.lineTo(d(d.domain()[0]-10),j(j.domain()[0]-10)),t.closePath(),e.attr("d",t.toString())):(t.moveTo(d(d.domain()[0]-10),j(d.domain()[0]-10+n[0][1][2])),t.lineTo(d(d.domain()[1]+10),j(d.domain()[1]+10+n[0][1][2])),t.lineTo(d(d.domain()[1]+10),j(j.domain()[0]-10)),t.closePath(),t.moveTo(d(d.domain()[0]-10),j(d.domain()[0]-10-n[0][0][2])),t.lineTo(d(d.domain()[1]+10),j(d.domain()[1]+10-n[0][0][2])),t.lineTo(d(d.domain()[0]-10),j(j.domain()[1]+10)),t.closePath(),e.attr("d",t.toString())):0===n[0][0][0]?(n[0][0][2]===-n[1][0][2]&&(t.moveTo(d(-n[0][0][2]),j(j.domain()[0]-10)),t.lineTo(d(-n[0][0][2]),j(j.domain()[1]+10))),e.attr("d",t.toString())):0===n[0][0][1]?(n[0][0][2]===-n[1][0][2]&&(t.moveTo(d(n[0][0][2]),j(j.domain()[0]-10)),t.lineTo(d(n[0][0][2]),j(j.domain()[1]+10))),e.attr("d",t.toString())):(n[0][0][2]===-n[1][0][2]&&(t.moveTo(d(d.domain()[0]-10),j(d.domain()[0]-10-n[0][0][2])),t.lineTo(d(d.domain()[1]+10),j(d.domain()[1]+10-n[0][0][2]))),e.attr("d",t.toString()))}),[i,a,b,u,d,j]),Object(c.jsx)("svg",{width:t,height:n,viewBox:"".concat(-t/2," ").concat(-n/2," ").concat(t," ").concat(n),ref:s})},D=(n(114),function(e){var t,n=e.underSAT,a=r.a.useState(2),s=Object(l.a)(a,2),o=s[0],d=s[1],h=r.a.useState("::<=?"),j=Object(l.a)(h,2),b=j[0],u=j[1],x=r.a.useState("3"),m=Object(l.a)(x,2),f=m[0],O=m[1],p=r.a.useState(!1),v=Object(l.a)(p,2),g=v[0],k=v[1],S=r.a.useCallback((function(e){d(Number.parseInt(e.currentTarget.value[0],10)),u(e.currentTarget.value.slice(1))}),[d,u]),C=r.a.useCallback((function(e){O(e.currentTarget.value)}),[O]),F=r.a.useCallback((function(e){k(e.currentTarget.checked)}),[k]),P=r.a.useMemo((function(){return 1===o?[1,b,Number.parseFloat(f)]:[1,2,b,Number.parseFloat(f)]}),[o,b,f]);return Object(c.jsxs)("div",{className:"Preprocess",children:[Object(c.jsxs)("fieldset",{className:"expression-picker",children:[Object(c.jsx)("legend",{children:"Choose an expression to be converted"}),Object(c.jsxs)("label",{children:["Type of operation =",Object(c.jsxs)("select",{value:o+b,onChange:S,children:[Object(c.jsx)("option",{label:"x\u2081 - x\u2082 \u2264 r",value:"2::<=?"}),Object(c.jsx)("option",{label:"x\u2081 - x\u2082 < r",value:"2::<?"}),Object(c.jsx)("option",{label:"x\u2081 - x\u2082 \u2265 r",value:"2::>=?"}),Object(c.jsx)("option",{label:"x\u2081 - x\u2082 > r",value:"2::>=?"}),n?Object(c.jsxs)(i.Fragment,{children:[Object(c.jsx)("option",{label:"x\u2081 - x\u2082 = r",value:"2::=?"}),Object(c.jsx)("option",{label:"x\u2081 - x\u2082 \u2260 r",value:"2::<>?"})]}):null,Object(c.jsx)("option",{label:"x\u2081 \u2264 r",value:"1::<=?"}),Object(c.jsx)("option",{label:"x\u2081 < r",value:"1::<?"}),Object(c.jsx)("option",{label:"x\u2081 \u2265 r",value:"1::>=?"}),Object(c.jsx)("option",{label:"x\u2081 > r",value:"1::>=?"}),n?Object(c.jsxs)(i.Fragment,{children:[Object(c.jsx)("option",{label:"x\u2081 = r",value:"1::=?"}),Object(c.jsx)("option",{label:"x\u2081 \u2260 r",value:"1::<>?"})]}):null]})]}),Object(c.jsxs)("label",{children:["Value of r =",Object(c.jsxs)("div",{children:[Object(c.jsx)("input",{type:"range",min:"-5",max:"5",step:"0.1",value:f,onChange:C}),Object(c.jsx)("input",{type:"number",min:"-5",max:"5",value:f,onChange:C})]})]}),Object(c.jsx)("br",{}),Object(c.jsx)("br",{}),Object(c.jsxs)("label",{children:["Convert? ",Object(c.jsx)("input",{type:"checkbox",checked:g,onChange:F})]})]}),Object(c.jsxs)("div",{className:"expression-viewer",children:["Original Expression: x",Object(c.jsx)("sub",{children:"1"})," ",2===o?Object(c.jsxs)(i.Fragment,{children:["- x",Object(c.jsx)("sub",{children:"2"})]}):""," ","".concat(w(b)," ").concat(f),Object(c.jsx)("br",{}),Object(c.jsxs)("span",{className:g?"":"invisible",children:["Processed Expression: ",(t=y(P),t.map((function(e,t){return Object(c.jsxs)(i.Fragment,{children:[0===t?null:" \u2227 ",e.map((function(e,t){return Object(c.jsxs)(i.Fragment,{children:[0===t?null:" \u2228 ",T(e)]},t)}))]},t)})))]})]}),Object(c.jsx)(I,{width:640,height:400,processed:g,expressible:P})]})}),E=function(){return Object(c.jsxs)("section",{className:"Section Section2",children:[Object(c.jsx)("h2",{children:"Your Focus Determines Your Reality\u2026 or Your Solvers"}),Object(c.jsxs)("p",{children:[Object(c.jsx)("span",{className:"initial",children:"I"}),'t is often tedious to encode a problem entirely in boolean logic, and sometimes there is even a domain-specific solvers that is much more efficient than SAT solvers for some parts of your problem, in which case paying SAT encoding cost and introducing NP-complete procedure for the part can slow down the solution search process significantly. This is why many applications of SAT solver often uses Satisfiability "Modulo Theory" (referred as "SMT" below) solvers instead. In this article, we introduce a Quantifier-free integer difference logic ("QFIDL") and its solver shortly, and describes the details of the integration of such "external" solvers with SAT solvers.']}),Object(c.jsxs)("section",{className:"Subsection Subsection2-1",children:[Object(c.jsx)("h3",{children:"Quantifier Free Integer Difference Logic (QFIDL)"}),Object(c.jsx)("p",{children:"QFIDL is a system that can solves the following question:"}),Object(c.jsxs)("blockquote",{children:["Suppose that we have integer variables: ",Object(c.jsxs)("var",{children:["x",Object(c.jsx)("sub",{children:"1"})]}),", ",Object(c.jsxs)("var",{children:["x",Object(c.jsx)("sub",{children:"2"})]}),", \u2026, ",Object(c.jsxs)("var",{children:["x",Object(c.jsx)("sub",{children:"n"})]})," and their constraints in a form of ",Object(c.jsxs)("var",{children:["x",Object(c.jsx)("sub",{children:"i"})]})," - ",Object(c.jsxs)("var",{children:["x",Object(c.jsx)("sub",{children:"j"})]})," ",Object(c.jsxs)("var",{children:["[","op","]"]})," ",Object(c.jsx)("var",{children:"c"})," or ",Object(c.jsxs)("var",{children:["x",Object(c.jsx)("sub",{children:"i"})]})," ",Object(c.jsxs)("var",{children:["[","op","]"]})," ",Object(c.jsx)("var",{children:"c"}),", where ",Object(c.jsx)("var",{children:"c"})," is a real number constant and ",Object(c.jsxs)("var",{children:["[","op","]"]})," is one of ",Object(c.jsx)("var",{children:"<"}),", ",Object(c.jsx)("var",{children:"\u2264"}),", ",Object(c.jsx)("var",{children:">"}),", ",Object(c.jsx)("var",{children:"\u2265"}),". Will there be an assignment for these integer variables so that they satisfies all the given constraints?"]}),Object(c.jsx)("p",{className:"indent",children:"Actually, we can encode these constraints in an even simpler form:"}),Object(c.jsxs)("blockquote",{children:["Suppose that we have integer variables: ",Object(c.jsxs)("var",{children:["x",Object(c.jsx)("sub",{children:"1"})]}),", ",Object(c.jsxs)("var",{children:["x",Object(c.jsx)("sub",{children:"2"})]}),", \u2026, ",Object(c.jsxs)("var",{children:["x",Object(c.jsx)("sub",{children:"n"})]})," and their constraints in a form of ",Object(c.jsxs)("var",{children:["x",Object(c.jsx)("sub",{children:"i"})]})," - ",Object(c.jsxs)("var",{children:["x",Object(c.jsx)("sub",{children:"j"})]})," ",Object(c.jsx)("var",{children:"\u2264"})," ",Object(c.jsx)("var",{children:"c"}),", where ",Object(c.jsx)("var",{children:"c"})," is an integer number constant. Will there be an assignment for these integer variables so that they satisfies all the given constraints?"]}),Object(c.jsxs)("p",{children:["Here, we removed the constraints only with one variable, restrict ",Object(c.jsx)("var",{children:"c"}),' to be an integer, and limits the operator to the "less than or equal to" operator. This form is what QFIDL really solves internally.']}),Object(c.jsxs)("p",{className:"indent",children:["How this simplification is possible? Let","'","s check it in its graphical form:"]}),Object(c.jsx)(D,{underSAT:!1}),Object(c.jsxs)("p",{children:["As you may have noticed, the area that covered by simplified form is not exactly the same. However, since the variables are actually ",Object(c.jsx)("em",{children:"integer"})," variables, we need to focus on integer lattice points covered by those areas, which faithfully agree with each other."]}),Object(c.jsxs)("p",{className:"indent",children:["One thing worth noting that is how we removed one variable constraints. We introduce an auxiliary variable ",Object(c.jsx)("var",{children:"z"})," representing 0, make one variable constraints to two variable constraints with ",Object(c.jsx)("var",{children:"z"}),". We can add this auxiliary variable as (simple version of) QFIDL always works on a difference of two variables. Thus, once we have an satisfying assignment for integer variables, we can add or substract the same amount from all variables to get another satisfying assignment. By adjusting the assigned value for ",Object(c.jsx)("var",{children:"z"}),' to be 0, we can derive a solution for "complex" form of constraints.']}),Object(c.jsxs)("p",{className:"indent",children:["When we use QFIDL alongside SAT solver, we have conjunctions and disjunctions. This allow us to encode more operators. In the above problem, we can change the list of ",Object(c.jsxs)("var",{children:["[","op","]"]})," into:"]}),Object(c.jsxs)("blockquote",{children:["\u2026 ",Object(c.jsxs)("var",{children:["[","op","]"]})," is one of ",Object(c.jsx)("var",{children:"<"}),", ",Object(c.jsx)("var",{children:"\u2264"}),", ",Object(c.jsx)("var",{children:">"}),", ",Object(c.jsx)("var",{children:"\u2265"}),", ",Object(c.jsx)("strong",{children:Object(c.jsx)("var",{children:"="})}),", ",Object(c.jsx)("strong",{children:Object(c.jsx)("var",{children:"\u2260"})}),". \u2026"]}),Object(c.jsx)("p",{children:"The simplification of these new operators can also be depicted as a graph:"}),Object(c.jsx)(D,{underSAT:!0})]}),Object(c.jsxs)("section",{className:"Subsection Subsection2-2",children:[Object(c.jsx)("h3",{children:"QFIDL Solver"}),Object(c.jsx)("p",{children:"How can we solve QFIDL problems? Suppose that we have"}),Object(c.jsxs)("blockquote",{className:"math",children:[Object(c.jsxs)("var",{children:["x",Object(c.jsx)("sub",{children:"1"})]})," - ",Object(c.jsxs)("var",{children:["x",Object(c.jsx)("sub",{children:"2"})]})," \u2264 4",Object(c.jsx)("br",{}),Object(c.jsxs)("var",{children:["x",Object(c.jsx)("sub",{children:"2"})]})," - ",Object(c.jsxs)("var",{children:["x",Object(c.jsx)("sub",{children:"3"})]})," \u2264 5",Object(c.jsx)("br",{}),Object(c.jsxs)("var",{children:["x",Object(c.jsx)("sub",{children:"3"})]})," - ",Object(c.jsxs)("var",{children:["x",Object(c.jsx)("sub",{children:"1"})]})," \u2264 -10"]}),Object(c.jsxs)("p",{children:["We can easily show that there is no satisfying assignment for ",Object(c.jsxs)("var",{children:["x",Object(c.jsx)("sub",{children:"1"})]}),", ",Object(c.jsxs)("var",{children:["x",Object(c.jsx)("sub",{children:"2"})]}),", and ",Object(c.jsxs)("var",{children:["x",Object(c.jsx)("sub",{children:"3"})]}),":"]}),Object(c.jsxs)("blockquote",{className:"math",children:[Object(c.jsxs)("var",{children:["x",Object(c.jsx)("sub",{children:"1"})]})," \u2264 ",Object(c.jsxs)("var",{children:["x",Object(c.jsx)("sub",{children:"2"})]})," + 4 \u2264 ",Object(c.jsxs)("var",{children:["x",Object(c.jsx)("sub",{children:"3"})]})," + 9 \u2264 ",Object(c.jsxs)("var",{children:["x",Object(c.jsx)("sub",{children:"1"})]})," - 1"]}),Object(c.jsxs)("p",{children:["i.e., the integer ",Object(c.jsxs)("var",{children:["x",Object(c.jsx)("sub",{children:"1"})]})," should be smaller than its predecessor, and it is impossible. This procedure can be generalized to any QFIDL problems. We first construct a graph:"]}),Object(c.jsx)(C,{}),Object(c.jsxs)("p",{children:["Here, each node represents a variable, and the special ",Object(c.jsx)("var",{children:"min"})," node represents the minimum variable among all. Each edge represents a difference inequality between two end nodes. For example, when there is an inequality ",Object(c.jsxs)("var",{children:["x",Object(c.jsx)("sub",{children:"1"})]})," - ",Object(c.jsxs)("var",{children:["x",Object(c.jsx)("sub",{children:"2"})]})," \u2264 4, we put a edge from the node ",Object(c.jsxs)("var",{children:["x",Object(c.jsx)("sub",{children:"1"})]})," to the node ",Object(c.jsxs)("var",{children:["x",Object(c.jsx)("sub",{children:"1"})]})," with the weight of 4."]}),Object(c.jsxs)("p",{className:"indent",children:["Now, we will find shortest path to each node from ",Object(c.jsx)("var",{children:"min"})," node. We used ",Object(c.jsx)("a",{href:"https://en.wikipedia.org/wiki/Bellman%E2%80%93Ford_algorithm",children:"Bellman-Ford Algorithm"})," to find the shortest path."]}),Object(c.jsx)(P,{}),Object(c.jsxs)("p",{children:["After traversing all edges twice, the algorithm finds that there is a negative cycle: ",Object(c.jsxs)("var",{children:["x",Object(c.jsx)("sub",{children:"1"})]}),"-",Object(c.jsxs)("var",{children:["x",Object(c.jsx)("sub",{children:"2"})]}),"-",Object(c.jsxs)("var",{children:["x",Object(c.jsx)("sub",{children:"3"})]}),"-",Object(c.jsxs)("var",{children:["x",Object(c.jsx)("sub",{children:"1"})]}),". Note that this negative cycle is exactly the sequence we saw in this unsatisfiabilty proof:"]}),Object(c.jsxs)("blockquote",{className:"math",children:[Object(c.jsxs)("var",{children:["x",Object(c.jsx)("sub",{children:"1"})]})," \u2264 ",Object(c.jsxs)("var",{children:["x",Object(c.jsx)("sub",{children:"2"})]})," + 4 \u2264 ",Object(c.jsxs)("var",{children:["x",Object(c.jsx)("sub",{children:"3"})]})," + 9 \u2264 ",Object(c.jsxs)("var",{children:["x",Object(c.jsx)("sub",{children:"1"})]})," - 1"]}),Object(c.jsxs)("p",{children:["This is because a negative cycle of the graph encoded in the above-mentioned way appears only when there is such an unsatisfiabilty proof, or rather, it is a direct encoding of an unsatisfiabilty proof. Moreover, this graph method gives a concrete satisfying assignment if there is no negative cycle. Suppose that ",Object(c.jsxs)("var",{children:["x",Object(c.jsx)("sub",{children:"1"})]})," and ",Object(c.jsxs)("var",{children:["x",Object(c.jsx)("sub",{children:"2"})]})," have the following constraint:"]}),Object(c.jsxs)("blockquote",{className:"math",children:[Object(c.jsxs)("var",{children:["x",Object(c.jsx)("sub",{children:"1"})]})," - ",Object(c.jsxs)("var",{children:["x",Object(c.jsx)("sub",{children:"2"})]})," \u2264 ",Object(c.jsx)("var",{children:"c"})]}),Object(c.jsxs)("p",{children:["If ",Object(c.jsxs)("var",{children:["d",Object(c.jsx)("sub",{children:"1"})]})," and ",Object(c.jsxs)("var",{children:["d",Object(c.jsx)("sub",{children:"2"})]})," are the shortest path distance to ",Object(c.jsxs)("var",{children:["x",Object(c.jsx)("sub",{children:"1"})]})," and ",Object(c.jsxs)("var",{children:["x",Object(c.jsx)("sub",{children:"2"})]})," from ",Object(c.jsx)("var",{children:"min"}),", they should satisfy"]}),Object(c.jsxs)("blockquote",{className:"math",children:["- ",Object(c.jsxs)("var",{children:["d",Object(c.jsx)("sub",{children:"1"})]})," + ",Object(c.jsxs)("var",{children:["d",Object(c.jsx)("sub",{children:"2"})]})," \u2264 ",Object(c.jsx)("var",{children:"c"})]}),Object(c.jsxs)("p",{children:["Otherwise, ",Object(c.jsxs)("var",{children:["d",Object(c.jsx)("sub",{children:"1"})]})," + ",Object(c.jsx)("var",{children:"c"})," is smaller than ",Object(c.jsxs)("var",{children:["d",Object(c.jsx)("sub",{children:"2"})]}),", and ",Object(c.jsxs)("var",{children:["d",Object(c.jsx)("sub",{children:"2"})]})," is not the shortest path distance to ",Object(c.jsxs)("var",{children:["x",Object(c.jsx)("sub",{children:"2"})]}),". In other words, ",Object(c.jsxs)("var",{children:["x",Object(c.jsx)("sub",{children:"1"})]})," = - ",Object(c.jsxs)("var",{children:["d",Object(c.jsx)("sub",{children:"1"})]})," and ",Object(c.jsxs)("var",{children:["x",Object(c.jsx)("sub",{children:"2"})]})," = - ",Object(c.jsxs)("var",{children:["d",Object(c.jsx)("sub",{children:"2"})]})," should be a satisfying assignment if they are indeed the shortest path distances from ",Object(c.jsx)("var",{children:"min"}),". Here is a satisfiable example:"]}),Object(c.jsxs)("blockquote",{className:"math",children:[Object(c.jsxs)("var",{children:["x",Object(c.jsx)("sub",{children:"1"})]})," - ",Object(c.jsxs)("var",{children:["x",Object(c.jsx)("sub",{children:"4"})]})," \u2264 2",Object(c.jsx)("br",{}),Object(c.jsxs)("var",{children:["x",Object(c.jsx)("sub",{children:"1"})]})," - ",Object(c.jsxs)("var",{children:["x",Object(c.jsx)("sub",{children:"2"})]})," \u2264 4",Object(c.jsx)("br",{}),Object(c.jsxs)("var",{children:["x",Object(c.jsx)("sub",{children:"2"})]})," - ",Object(c.jsxs)("var",{children:["x",Object(c.jsx)("sub",{children:"1"})]})," \u2264 -4",Object(c.jsx)("br",{}),Object(c.jsxs)("var",{children:["x",Object(c.jsx)("sub",{children:"2"})]})," - ",Object(c.jsxs)("var",{children:["x",Object(c.jsx)("sub",{children:"3"})]})," \u2264 5",Object(c.jsx)("br",{}),Object(c.jsxs)("var",{children:["x",Object(c.jsx)("sub",{children:"3"})]})," - ",Object(c.jsxs)("var",{children:["x",Object(c.jsx)("sub",{children:"4"})]})," \u2264 -1"]}),Object(c.jsx)(N,{}),Object(c.jsxs)("p",{children:["As this example gives the distance -4, 0, 0, -2, the satisfying assignment we can derive from the graph is ",Object(c.jsxs)("var",{children:["x",Object(c.jsx)("sub",{children:"1"})]})," = 4, ",Object(c.jsxs)("var",{children:["x",Object(c.jsx)("sub",{children:"2"})]})," = 0, ",Object(c.jsxs)("var",{children:["x",Object(c.jsx)("sub",{children:"3"})]})," = 0, and ",Object(c.jsxs)("var",{children:["x",Object(c.jsx)("sub",{children:"4"})]})," = 2. We can check that all the above conditions are met:"]}),Object(c.jsxs)("blockquote",{className:"math",children:[Object(c.jsxs)("var",{children:["x",Object(c.jsx)("sub",{children:"1"})]})," - ",Object(c.jsxs)("var",{children:["x",Object(c.jsx)("sub",{children:"4"})]})," = 4 - 2 \u2264 2",Object(c.jsx)("br",{}),Object(c.jsxs)("var",{children:["x",Object(c.jsx)("sub",{children:"1"})]})," - ",Object(c.jsxs)("var",{children:["x",Object(c.jsx)("sub",{children:"2"})]})," = 4 - 0 \u2264 4",Object(c.jsx)("br",{}),Object(c.jsxs)("var",{children:["x",Object(c.jsx)("sub",{children:"2"})]})," - ",Object(c.jsxs)("var",{children:["x",Object(c.jsx)("sub",{children:"1"})]})," = 0 - 4 \u2264 -4",Object(c.jsx)("br",{}),Object(c.jsxs)("var",{children:["x",Object(c.jsx)("sub",{children:"2"})]})," - ",Object(c.jsxs)("var",{children:["x",Object(c.jsx)("sub",{children:"3"})]})," = 0 - 0 \u2264 5",Object(c.jsx)("br",{}),Object(c.jsxs)("var",{children:["x",Object(c.jsx)("sub",{children:"3"})]})," - ",Object(c.jsxs)("var",{children:["x",Object(c.jsx)("sub",{children:"4"})]})," = 0 - 2 \u2264 -1"]})]})]})},q=function(){return Object(c.jsxs)("section",{className:"Section Section3",children:[Object(c.jsxs)("h2",{children:["You","'","ve got a plan, a plan to mix them all"]}),Object(c.jsxs)("p",{children:[Object(c.jsx)("span",{className:"initial",children:"N"}),"ow the question is this: how can we allow QFIDL solver to work with a disjunction of contraints? In other words, how can we combine a SAT solver (boolean solver) and a QFIDL solver into a single solver? There are two simple ways to achieve this integration:"]}),Object(c.jsxs)("ul",{children:[Object(c.jsx)("li",{children:'Pick "true" constraints by SAT solver first, and apply QFIDL solver on those constraints, until QFIDL solver finds a solution or SAT solver exhausts the possibilities'}),Object(c.jsx)("li",{children:"While executing SAT solver, use QFIDL as a conflict-finding algorithm."})]}),Object(c.jsx)("p",{children:"We will show these two approaches in turn, and describe how they are different."})]})},B=function(){return Object(c.jsxs)("section",{className:"Section References",children:[Object(c.jsx)("h2",{children:"References"}),Object(c.jsxs)("ol",{children:[Object(c.jsxs)("li",{id:"ref-1",children:["Martin Davis, George Logemann, and Donald Loveland. 1962. A machine program for theorem-proving. Commun. ACM 5, 7 (July 1962), 394\u2013397. ",Object(c.jsx)("a",{href:"https://doi.org/10.1145/368273.368557",children:"doi:10.1145/368273.368557"}),". ",Object(c.jsx)("a",{href:"https://hdl.handle.net/2027%2Fmdp.39015095248095",children:"hdl:2027/mdp.39015095248095"}),"."]}),Object(c.jsxs)("li",{id:"ref-2",children:["Matthew W. Moskewicz, Conor F. Madigan, Ying Zhao, Lintao Zhang, and Sharad Malik. 2001. Chaff: engineering an efficient SAT solver. In ",Object(c.jsx)("i",{children:"Proceedings of the 38th annual Design Automation Conference"})," (",Object(c.jsxs)("i",{children:["DAC ","'","01"]}),"). Association for Computing Machinery, New York, NY, USA, 530\u2013535. ",Object(c.jsx)("a",{href:"https://doi.org/10.1145/378239.379017",children:"doi:10.1145/378239.379017"})]}),Object(c.jsxs)("li",{id:"ref-3",children:["Jo\xe3o P. Marques Silva and Karem A. Sakallah. 1997. GRASP\u2014a new search algorithm for satisfiability. In Proceedings of the 1996 IEEE/ACM international conference on Computer-aided design (ICCAD ","'","96). IEEE Computer Society, USA, 220\u2013227."]})]})]})},L=(n(115),function(){return Object(c.jsxs)("article",{className:"App",lang:"en",children:[Object(c.jsx)("h1",{children:"Boolean meets Theories: SMT Solvers"}),Object(c.jsx)("hr",{}),Object(c.jsx)(o,{}),Object(c.jsx)("hr",{}),Object(c.jsx)(E,{}),Object(c.jsx)("hr",{}),Object(c.jsx)(q,{}),Object(c.jsx)("hr",{}),Object(c.jsx)(B,{})]})}),W=function(e){e&&e instanceof Function&&n.e(3).then(n.bind(null,117)).then((function(t){var n=t.getCLS,i=t.getFID,r=t.getFCP,a=t.getLCP,s=t.getTTFB;n(e),i(e),r(e),a(e),s(e)}))};s.a.render(Object(c.jsx)(r.a.StrictMode,{children:Object(c.jsx)(L,{})}),document.getElementById("root")),W()}},[[116,1,2]]]);
//# sourceMappingURL=main.00c3d1af.chunk.js.map