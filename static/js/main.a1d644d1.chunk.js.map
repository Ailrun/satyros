{"version":3,"sources":["component/Section1.tsx","hook/useSatyrosAPI.ts","hook/useForceGraph.ts","component/BellmanFordGraph.tsx","Util.tsx","component/Example1.tsx","component/Example2.tsx","component/Example3.tsx","component/PreprocessGraph.tsx","component/Preprocess.tsx","component/Section2.tsx","component/Section3.tsx","component/References.tsx","component/App.tsx","reportWebVitals.ts","index.tsx"],"names":["Section1","className","href","useSatyrosAPI","f","React","useState","undefined","satyrosAPI","setSatyrosAPI","useEffect","setTimeout","window","makeSatyrosAPI","oldNodeTexts","d3","oldLinkTexts","radian","ux","uy","vx","vy","dot","mod","Math","sqrt","rad","acos","svgArcToCenterParam","x1","y1","rx","ry","phi","fA","fS","x2","y2","cx","cy","startAngle","deltaAngle","endAngle","PIx2","PI","Error","s_phi","sin","c_phi","cos","hd_x","hd_y","hs_x","hs_y","x1_","y1_","lambda","rxry","rxy1_","ryx1_","sum_of_sq","coe","abs","cx_","cy_","xcr1","xcr2","ycr1","ycr2","clockwise","BellmanFordGraph","width","height","nodes","links","ref","useRef","id","nodeId","nodeShape","nodeText","nodeFill","nodeFillNew","linkId","linkDistance","linkStroke","linkStrokeNew","linkStrokeActive","linkText","linkActive","deps","radius","simulation","force","strength","theta","d","l","distance","d3ForceLimit","x0","y0","cushionWidth","cushionStrength","on","ticked","nodeRef","linkRef","nodeShapeImpl","useMemo","_d","nodeFillImpl","nodeFillNewImpl","linkStrokeImpl","linkStrokeNewImpl","linkStrokeActiveImpl","current","attr","xsource","source","x","xtarget","target","ysource","y","ytarget","select","r","hypot","selectChildren","arc","drag","event","active","alphaTarget","restart","subject","fx","fy","svg","append","transition","duration","ease","attrTween","remove","old","Map","data","map","newNodes","Object","assign","get","newLinks","hasEnteredNode","hasEnteredLink","join","enter","size","g","each","set","this","text","classed","clone","lower","update","datum","updated","t","call","alpha","useForceGraph","variable","startVertex","endVertex","weight","lastActive","viewBox","stepsExcept","step","cbs","oneStep","qfidlStep","satStep","resultStep","Start","NegativeCyclePass","NegativeCycleFind","NegativeCycleCheck","PropagationEnd","PropagationNth","PropagationFindShorter","PropagationCheck","BacktraceComplete","BacktraceExhaustion","DecisionComplete","DecisionResult","BCPConflictDrivenClause","BCPConflict","BCPComplete","BCPUnitClause","Finish","undosExcept","undo","oneUndo","qfidlUndo","satUndo","startUndo","operatorToString","operator","expressibleToExpressedFormula","expressible","length","ceil","floor","expressedToFragment","expressed","Example1","stage","setStage","bellmanFordNodes","setBellmanFordNodes","bellmanFordLinks","setBellmanFordLinks","useCallback","getBellmanFordGraph","ns","ls","s","cb","reset","style","display","margin","disabled","onClick","Example2","skipStep","setSkipStep","skipUndo","setSkipUndo","console","log","includes","Example3","PreprocessGraph","processed","padding","ratio","xScale","yScale","prevOp","usePrevious","prevProcessed","xAxis","ticks","tickSizeInner","tickSizeOuter","tickPadding","yAxis","xAxisG","yAxisG","selectAll","pathTransition","selectChild","delay","line","moveTo","domain","lineTo","closePath","toString","expressedFormula","Preprocess","underSAT","vars","setVars","op","setOp","setR","setProcessed","handleTypeChange","e","Number","parseInt","currentTarget","value","slice","handleRChange","handleProcessedChange","checked","parseFloat","onChange","label","type","min","max","expressedClause","i","Section2","Section3","References","App","lang","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a1d644d1.chunk.js","sourcesContent":["import React from 'react';\n\nconst Section1: React.FunctionComponent = () => {\n  return (\n    <section className='Section Section1'>\n      <h2>Prelude: Boolean Constraints and Their Solvers</h2>\n      <p><a href='https://en.wikipedia.org/wiki/Boolean_satisfiability_problem'><span className='initial'>S</span>atifiability of boolean constraints</a> (often referred as \"SAT\") is a central topic of computational complexity. It is NP-complete, so it can encode any nondeterministic polynomial-time problems with at most polynomially larger cost, which includes integer factorization, <a href='https://en.wikipedia.org/wiki/Subset_sum_problem'>subset sum problem</a>, <a href='https://en.wikipedia.org/wiki/Travelling_salesman_problem'>travelling sales man problem</a>, <a href='https://en.wikipedia.org/wiki/Sudoku'>Sudoku</a>, and so on. These nondeterministic polynomial-time problems are often found in more realistic applications, for example, Automated Deduction, Computer-Aided Design (CAD), and Artificial Intelligence. With its importance, SAT solving algorithm has been discussed for a long time since Davis and Putnam{ '\\'' }s work on 1960<a className='footnote' href='#ref-1'>1</a>. Modern SAT solvers, including <a href='http://minisat.se/'>MiniSAT</a> and <a href='https://www.labri.fr/perso/lsimon/glucose/'>Glucose</a> show incredible performance even on large problems with millions of boolean variables on many industrial uses, and there are still researches going on to improve the performance even further.</p>\n      <section className='Subsection Subsection1-1'>\n      <h3>What SAT Solver Actually Solves?</h3>\n      <p>The question of interest is like the following:\n      </p>\n      <blockquote>\n        Suppose that we have boolean variables: <var>b<sub>1</sub></var>, <var>b<sub>2</sub></var>, … , <var>b<sub>n</sub></var>, and their constraints obtained by applying logical and (logical conjunction, ∧), logical or (logical disjunction, ∨), and logical negation (¬) operations on them. Will there be an assignment for those boolean variables so that they satisfy all the given constraints?\n      </blockquote>\n      <p>\n        SAT solvers can answer whether there is such an assignment or not, and actually construct the assignment if it exists.\n      </p>\n      <section className='side-node'>\n        <h4>Side note:</h4>\n        <p className='indent'>\n          In many SAT solvers, the requirements on constraints are often more strict: The conjunction of all constraints should be in the <a href='https://en.wikipedia.org/wiki/Conjunctive_normal_form'>Conjunctive Normal Form (CNF)</a>. For example,\n        </p>\n        <blockquote>\n          (<var>b<sub>1</sub></var> ∨ <var>b<sub>2</sub></var>) ∧ <var>b<sub>3</sub></var>\n          <br />\n          <var>b<sub>2</sub></var> ∧ (¬<var>b<sub>3</sub></var> ∨ <var>b<sub>4</sub></var>)\n        </blockquote>\n        <p>is a valid set of constraints, but</p>\n        <blockquote>\n          <var>b<sub>1</sub></var> ∨ (<var>b<sub>2</sub></var> ∧ <var>b<sub>3</sub></var>)\n          <br />\n          ¬(<var>b<sub>2</sub></var> ∨ (<var>b<sub>3</sub></var> ∧ <var>b<sub>4</sub></var>))\n        </blockquote>\n        <p>\n          is not because there is a disjunction (∨) that contains a conjunction (∧) and a negation (¬) is applied on a non-variable expression. However, there is <a href='https://en.wikipedia.org/wiki/Tseytin_transformation'>an efficient translation between non-CNF constraints and CNF constraints</a>, so this is more about how one encodes their problems.\n        </p>\n        </section>\n      </section>\n      <section className='Subsection Subsection1-2'>\n      <h3>How SAT Solver Solves SAT Problems Efficiently?</h3>\n      One of the important algorithm that allows SAT solvers to \"learn\" from its trial-and-error is <a href='https://en.wikipedia.org/wiki/Conflict-driven_clause_learning'>Conflict Deriven Clause Learning (CDCL)</a>. <a href='https://cse442-17f.github.io/Conflict-Driven-Clause-Learning/'>This interactive tutorial</a> explains what CDCL is and how SAT solvers use them. (This article is also deeply inspired from the tutorial!) In this article, we will not use any complex optimization other than CDCL, but modern SAT solvers employ many other optimizations, including 2 watched literals<a className='footnote' href='#ref-2'>2</a>, Variable State Independent Decaying Sum<a className='footnote' href='#ref-2'>2</a>, and Restart<a className='footnote' href='#ref-3'>3</a>.\n      </section>\n    </section>\n  );\n};\n\nexport default Section1;\n","import React from \"react\";\n\nexport const useSatyrosAPI = (f : FormulaLike<Expressible>) => {\n  const [satyrosAPI, setSatyrosAPI] = React.useState<SatyrosAPI | undefined>(undefined);\n\n  React.useEffect(\n    () => {\n      setTimeout(() => {\n        setSatyrosAPI(window.makeSatyrosAPI(f));\n      }, 500);\n    },\n    // eslint-disable-next-line\n    []\n  );\n\n  return satyrosAPI;\n};\n","import * as d3 from 'd3';\nimport d3ForceLimit from 'd3-force-limit';\nimport React from 'react';\n\nconst oldNodeTexts = d3.local<string>();\nconst oldLinkTexts = d3.local<string>();\n\nexport const useForceGraph = <N extends d3.SimulationNodeDatum, L extends d3.SimulationLinkDatum<N>>({\n  id, width, height,\n  nodes, links,\n  ref,\n  nodeId, nodeShape, nodeText, nodeFill, nodeFillNew,\n  linkId, linkDistance, linkStroke, linkStrokeNew, linkStrokeActive, linkText, linkActive,\n} : {\n  id: string,\n  width: number,\n  height: number,\n  nodes: N[],\n  links: L[],\n  ref: SVGSVGElement | null,\n  nodeId(node: N): number | string,\n  nodeShape?(node: N): 'circle' | 'rect',\n  nodeText?(node: N): string,\n  nodeFill?: ((node: N) => string) | string,\n  nodeFillNew?: ((node: N) => string) | string,\n  linkId(link: L): number | string,\n  linkDistance(link: L): number,\n  linkStroke?: string,\n  linkStrokeNew?: string,\n  linkStrokeActive?: ((link: L) => string) | string,\n  linkText?(link: L): string,\n  linkActive?(link: L): boolean,\n}, deps: any[] = []) => {\n  const radius = 8;\n  const simulation = d3.forceSimulation<N, L>()\n    .force('collide', d3.forceCollide(radius))\n    .force('charge', d3.forceManyBody().strength(-1000).theta(0.5))\n    .force('link', d3.forceLink<N, L>().id(d => nodeId(d)).strength(l => linkDistance(l) * 0.01).distance(linkDistance))\n    .force('x', d3.forceX())\n    .force('y', d3.forceY())\n    .force('limits', d3ForceLimit().radius(5 * radius).x0(- width / 2).x1(width / 2).y0(- height / 2).y1(height / 2).cushionWidth(10 * radius).cushionStrength(1))\n    .on('tick', ticked);\n  const nodeRef = React.useRef<d3.Selection<SVGGElement, N, SVGGElement, any> | null>(null);\n  const linkRef = React.useRef<d3.Selection<SVGGElement, L, SVGGElement, any> | null>(null);\n\n  const nodeShapeImpl: (node: N) => 'circle' | 'rect' = React.useMemo(() => nodeShape ?? ((_d : N) => 'circle'), /* eslint-disable-line react-hooks/exhaustive-deps */ []);\n  const nodeFillImpl = React.useMemo(() => nodeFill ?? '#000', /* eslint-disable-line react-hooks/exhaustive-deps */ []);\n  const nodeFillNewImpl = React.useMemo(() => nodeFillNew ?? '#000', /* eslint-disable-line react-hooks/exhaustive-deps */ []);\n  const linkStrokeImpl = linkStroke ?? '#000';\n  const linkStrokeNewImpl = linkStrokeNew ?? '#000';\n  const linkStrokeActiveImpl = linkStrokeActive ?? linkStrokeNewImpl;\n\n  React.useEffect(() => {\n    const svg = d3.select(ref);\n\n    svg.append('defs')\n      .append('marker')\n      .attr('id', 'arrow-new')\n      .attr('refX', 12)\n      .attr('refY', 4)\n      .attr('markerWidth', 8)\n      .attr('markerHeight', 8)\n      .attr('orient', 'auto')\n      .append('path')\n      .attr('d', 'M 0 0 8 4 0 8 2 4')\n      .attr('fill', linkStrokeNewImpl);\n\n    svg.append('defs')\n      .append('marker')\n      .attr('id', 'arrow')\n      .attr('refX', 12)\n      .attr('refY', 4)\n      .attr('markerWidth', 8)\n      .attr('markerHeight', 8)\n      .attr('orient', 'auto')\n      .append('path')\n      .attr('d', 'M 0 0 8 4 0 8 2 4')\n      .transition()\n      .duration(500)\n      .ease(d3.easeSinOut)\n      .duration(3000)\n      .attrTween('fill', () => {\n        return d3.interpolateRgb(linkStrokeNewImpl, linkStrokeImpl);\n      });\n\n    linkRef.current = svg.append('g')\n      .selectChildren('g');\n\n    nodeRef.current = svg.append('g')\n      .selectChildren('g');\n\n    return () => {\n      svg.selectChildren().remove();\n    };\n  }, /* eslint-disable-line react-hooks/exhaustive-deps */ [ref, ...deps]);\n\n  function ticked() {\n    if (ref !== null && linkRef.current !== null) {\n      linkRef.current\n        .attr('transform', d => {\n          const xsource = (d.source as any).x;\n          const xtarget = (d.target as any).x;\n          const ysource = (d.source as any).y;\n          const ytarget = (d.target as any).y;\n\n          return `translate(${(xsource + xtarget) / 2}, ${(ysource + ytarget) / 2})`;\n        })\n        .select('path')\n        .attr('d', d => {\n          const xsource = (d.source as any).x;\n          const xtarget = (d.target as any).x;\n          const ysource = (d.source as any).y;\n          const ytarget = (d.target as any).y;\n          const r = Math.hypot(xtarget - xsource, ytarget - ysource);\n\n          return `M${(xsource - xtarget) / 2},${(ysource - ytarget) / 2}A${r},${r} 0 0,1 ${(xtarget - xsource) / 2},${(ytarget - ysource) / 2}`;\n        });\n\n      linkRef.current\n        .selectChildren<SVGTextElement, any>('text')\n        .attr('x', d => {\n          const r = Math.hypot((d.target as any).x - (d.source as any).x, (d.target as any).y - (d.source as any).y);\n          const arc = svgArcToCenterParam(((d.source as any).x - (d.target as any).x) / 2, ((d.source as any).y - (d.target as any).y) / 2, r, r, 0, false, true, ((d.target as any).x - (d.source as any).x) / 2, ((d.target as any).y - (d.source as any).y) / 2);\n          return (r + 5) * Math.cos(arc.startAngle + arc.deltaAngle / 2) + arc.cx;\n        })\n        .attr('y', d => {\n          const r = Math.hypot((d.target as any).x - (d.source as any).x, (d.target as any).y - (d.source as any).y);\n          const arc = svgArcToCenterParam(((d.source as any).x - (d.target as any).x) / 2, ((d.source as any).y - (d.target as any).y) / 2, r, r, 0, false, true, ((d.target as any).x - (d.source as any).x) / 2, ((d.target as any).y - (d.source as any).y) / 2);\n          return (r + 5) * Math.sin(arc.startAngle + arc.deltaAngle / 2) + arc.cy;\n        });\n    }\n\n    if (ref !== null && nodeRef.current !== null) {\n\n      nodeRef.current\n        .attr('transform', d => `translate(${(d as any).x}, ${(d as any).y})`);\n    }\n  }\n\n  function drag(simulation: d3.Simulation<N, L>) {    \n    function dragstarted(event: any) {\n      if (!event.active) simulation.alphaTarget(0.3).restart();\n      event.subject.fx = event.subject.x;\n      event.subject.fy = event.subject.y;\n    }\n    \n    function dragged(event: any) {\n      event.subject.fx = event.x;\n      event.subject.fy = event.y;\n    }\n    \n    function dragended(event: any) {\n      if (!event.active) simulation.alphaTarget(0);\n      event.subject.fx = null;\n      event.subject.fy = null;\n    }\n    \n    return d3.drag()\n      .on('start', dragstarted)\n      .on('drag', dragged)\n      .on('end', dragended);\n  }\n\n  React.useEffect(() => {\n    const old = new Map(nodeRef.current!.data().map(d => [nodeId(d), d]));\n\n    const newNodes: N[] = nodes.map(d => Object.assign(old.get(nodeId(d)) || {}, d));\n    const newLinks: L[] = links.map(d => Object.assign({}, d));\n\n    let hasEnteredNode = false;\n    let hasEnteredLink = false;\n\n    nodeRef.current = nodeRef.current!\n      .data(newNodes, d => nodeId(d))\n      .join(\n        enter => {\n          if (enter.size() > 0) {\n            hasEnteredNode = true;\n          }\n\n          const g = enter.append('g')\n            .attr('opacity', 0)\n            .attr('stroke', '#333')\n            .attr('stroke-opacity', 1)\n            .attr('stroke-width', 0)\n            .attr('stroke-linecap', 'round')\n            .attr('stroke-linejoin', 'round');\n\n          g.transition()\n            .duration(500)\n            .ease(d3.easeSinIn)\n            .attr('opacity', 1);\n\n          if (nodeText !== undefined) {\n            g.append('text')\n              .each(function (d) {\n                oldNodeTexts.set(this, nodeText(d));\n              })\n              .text(d => nodeText(d))\n              .classed('node-text', true)\n              .attr('y', -10)\n              .attr('text-anchor', 'middle')\n              .attr('stroke', '#955')\n              .attr('stroke-width', 1)\n              .clone(true).lower()\n              .classed('node-text', false)\n              .classed('node-text-shade', true)\n              .attr('stroke', 'white')\n              .attr('stroke-width', 3);\n          }\n\n          g.append('rect')\n            .classed('node-shape', true)\n            .attr('x', - radius)\n            .attr('y', - radius)\n            .attr('width', 2 * radius)\n            .attr('height', 2 * radius)\n            .attr('rx', d => nodeShapeImpl(d) === 'rect' ? 0 : radius)\n            .attr('fill', nodeFillNewImpl)\n            .lower();\n\n          return g;\n        },\n        update => {\n          update.each(function(d) {\n            const g = d3.select(this).datum(d);\n            g.transition()\n              .duration(500)\n              .ease(d3.easeSinIn)\n              .attr('opacity', 1);\n\n            if (nodeText !== undefined) {\n              let updated = false;\n\n              g.selectChildren<SVGTextElement, N>('text.node-text')\n                .datum(d)\n                .text(function (d) {\n                  const t = nodeText(d);\n                  if (oldNodeTexts.get(this) !== t) {\n                    oldNodeTexts.set(this, t);\n                    updated = true;\n                  }\n                  return t;\n                });\n              if (updated) {\n                g.selectChildren('.node-shape')\n                  .datum(d)\n                  .transition()\n                  .duration(500)\n                  .ease(d3.easeSinIn)\n                  .attr('rx', d => nodeShapeImpl(d) === 'rect' ? 0 : radius)\n                  .attr('fill', nodeFillNewImpl as any);\n              } else {\n                g.selectChildren('.node-shape')\n                  .datum(d)\n                  .transition()\n                  .duration(500)\n                  .ease(d3.easeSinOut)\n                  .attr('rx', d => nodeShapeImpl(d) === 'rect' ? 0 : radius)\n                  .attr('fill', nodeFillImpl as any);\n              }\n            } else {\n              g.selectChildren('.node-shape')\n                .datum(d)\n                .transition()\n                .duration(500)\n                .ease(d3.easeSinOut)\n                .attr('rx', d => nodeShapeImpl(d) === 'rect' ? 0 : radius)\n                .attr('fill', nodeFillImpl as any);\n            }\n          });\n\n          return update;\n        },\n      )\n      .call(drag(simulation) as any);\n\n    linkRef.current = linkRef.current!\n      .data(newLinks, d => linkId(d))\n      .join(\n        enter => {\n          if (enter.size() > 0) {\n            hasEnteredLink = true;\n          }\n\n          const g = enter.append('g')\n            .attr('opacity', 0)\n            .attr('fill', linkStrokeNewImpl)\n            .attr('stroke', linkStrokeNewImpl);\n\n          g.transition()\n            .duration(500)\n            .ease(d3.easeSinIn)\n            .attr('opacity', 1);\n\n          if (linkText !== undefined) {\n            g.append('text')\n              .each(function(d) {\n                oldLinkTexts.set(this, linkText(d));\n              })\n              .text(linkText)\n              .classed('link-text', true)\n              .attr('text-anchor', 'middle')\n              .clone(true).lower()\n              .classed('link-text', false)\n              .classed('link-text-shade', true)\n              .attr('stroke', 'white')\n              .attr('stroke-width', 4);\n          }\n\n          g.append('path')\n            .attr('fill', 'transparent')\n            .attr('stroke-width', 1.5)\n            .attr('stroke-linecap', 'round')\n            .attr('marker-end', 'url(#arrow-new)')\n            .lower();\n\n          return g;\n        },\n        update => {\n          update.each(function (d) {\n            const g = d3.select(this).datum(d);\n            g.transition()\n              .duration(500)\n              .ease(d3.easeSinIn)\n              .attr('opacity', 1);\n\n            if (linkText !== undefined) {\n              let updated = false;\n\n              g.selectChildren<SVGTextElement, N>('text.link-text')\n                .datum(d)\n                .text(function (d) {\n                  const t = linkText(d);\n                  if (oldLinkTexts.get(this) !== t) {\n                    oldLinkTexts.set(this, t);\n                    updated = true;\n                  }\n                  return t;\n                });\n\n              if (updated) {\n                g.transition()\n                  .duration(500)\n                  .ease(d3.easeSinIn)\n                  .attr('stroke', linkStrokeNewImpl as any);\n\n                g.select('path')\n                  .attr('marker-end', 'url(#arrow-new)');\n              } else {\n                if (linkActive !== undefined && linkActive(d)) {\n                  g.transition()\n                    .duration(500)\n                    .ease(d3.easeSinIn)\n                    .attr('stroke', linkStrokeActiveImpl as any);\n\n                  g.select('path')\n                    .attr('marker-end', 'url(#arrow-new)');\n                } else {\n                  g.transition()\n                    .duration(500)\n                    .ease(d3.easeSinOut)\n                    .attr('stroke', linkStrokeImpl);\n\n                  g.select('path')\n                    .attr('marker-end', 'url(#arrow)');\n                }\n              }\n            } else {\n              if (linkActive !== undefined && linkActive(d)) {\n                g.transition()\n                  .duration(500)\n                  .ease(d3.easeSinOut)\n                  .attr('stroke', linkStrokeActiveImpl as any);\n\n                g.select('path')\n                  .attr('marker-end', 'url(#arrow-new)');\n              } else {\n                g.transition()\n                  .duration(500)\n                  .ease(d3.easeSinOut)\n                  .attr('stroke', linkStrokeImpl);\n\n                g.select('path')\n                  .attr('marker-end', 'url(#arrow)');\n              }\n            }\n          });\n\n          return update;\n        },\n      );\n\n    simulation.nodes(newNodes);\n    (simulation.force('link') as d3.ForceLink<N, L>)\n      .links(newLinks);\n    if (hasEnteredNode || hasEnteredLink) {\n      simulation.alpha(1).restart();\n    } else {\n      simulation.alpha(0);\n    }\n  }, /* eslint-disable-line react-hooks/exhaustive-deps */ [ref, nodes, links, ...deps]);\n}\n\nfunction radian(ux: number, uy: number, vx: number, vy: number) {\n  var dot = ux * vx + uy * vy;\n  var mod = Math.sqrt((ux * ux + uy * uy) * (vx * vx + vy * vy));\n  var rad = Math.acos(dot / mod);\n  if (ux * vy - uy * vx < 0.0) {\n    rad = -rad;\n  }\n  return rad;\n}\n\nfunction svgArcToCenterParam(x1: number, y1: number, rx: number, ry: number, phi: number, fA: boolean, fS: boolean, x2: number, y2: number) {\n  var cx, cy, startAngle, deltaAngle, endAngle;\n  var PIx2 = Math.PI * 2.0;\n\n  if (rx < 0) {\n    rx = -rx;\n  }\n  if (ry < 0) {\n    ry = -ry;\n  }\n  if (rx === 0.0 || ry === 0.0) {\n    throw Error('rx and ry can not be 0');\n  }\n\n  var s_phi = Math.sin(phi);\n  var c_phi = Math.cos(phi);\n  var hd_x = (x1 - x2) / 2.0;\n  var hd_y = (y1 - y2) / 2.0;\n  var hs_x = (x1 + x2) / 2.0;\n  var hs_y = (y1 + y2) / 2.0;\n\n  var x1_ = c_phi * hd_x + s_phi * hd_y;\n  var y1_ = c_phi * hd_y - s_phi * hd_x;\n\n  var lambda = (x1_ * x1_) / (rx * rx) + (y1_ * y1_) / (ry * ry);\n  if (lambda > 1) {\n    rx = rx * Math.sqrt(lambda);\n    ry = ry * Math.sqrt(lambda);\n  }\n\n  var rxry = rx * ry;\n  var rxy1_ = rx * y1_;\n  var ryx1_ = ry * x1_;\n  var sum_of_sq = rxy1_ * rxy1_ + ryx1_ * ryx1_;\n  if (!sum_of_sq) {\n    throw Error('start point can not be same as end point');\n  }\n  var coe = Math.sqrt(Math.abs((rxry * rxry - sum_of_sq) / sum_of_sq));\n  if (fA === fS) { coe = -coe; }\n\n  var cx_ = coe * rxy1_ / ry;\n  var cy_ = -coe * ryx1_ / rx;\n\n  cx = c_phi * cx_ - s_phi * cy_ + hs_x;\n  cy = s_phi * cx_ + c_phi * cy_ + hs_y;\n\n  var xcr1 = (x1_ - cx_) / rx;\n  var xcr2 = (x1_ + cx_) / rx;\n  var ycr1 = (y1_ - cy_) / ry;\n  var ycr2 = (y1_ + cy_) / ry;\n\n  startAngle = radian(1.0, 0.0, xcr1, ycr1);\n\n  deltaAngle = radian(xcr1, ycr1, -xcr2, -ycr2);\n  while (deltaAngle > PIx2) { deltaAngle -= PIx2; }\n  while (deltaAngle < 0.0) { deltaAngle += PIx2; }\n  if (fS === false) { deltaAngle -= PIx2; }\n  endAngle = startAngle + deltaAngle;\n  while (endAngle > PIx2) { endAngle -= PIx2; }\n  while (endAngle < 0.0) { endAngle += PIx2; }\n\n  var outputObj = {\n    cx: cx,\n    cy: cy,\n    startAngle: startAngle,\n    deltaAngle: deltaAngle,\n    endAngle: endAngle,\n    clockwise: (fS === true)\n  }\n\n  return outputObj;\n}\n","import * as d3 from 'd3';\nimport React from 'react';\n\nimport { useForceGraph } from '../hook/useForceGraph';\n\ninterface Props {\n  readonly width: number;\n  readonly height: number;\n  readonly nodes: SatyrosBellmanFordVertex[];\n  readonly links: SatyrosBellmanFordEdge[];\n}\n\ninterface SimulationNode extends d3.SimulationNodeDatum {\n  id: number;\n  distance: number;\n}\n\ninterface SimulationLink extends d3.SimulationLinkDatum<SimulationNode> {\n  id: string;\n  weight: number;\n  lastActive: boolean;\n}\n\nexport const BellmanFordGraph: React.FunctionComponent<Props> = ({\n  width, height, nodes, links\n}) => {\n  const ref = React.useRef<SVGSVGElement>(null);\n\n  const simulationNodes = React.useMemo(() => {\n    return nodes.map(({\n      variable, distance,\n    }): SimulationNode => ({\n      id: variable ?? -1,\n      distance,\n    }));\n  }, [nodes]);\n\n  const simulationLinks = React.useMemo(() => {\n    return links.map(({\n      startVertex, endVertex, weight, lastActive,\n    }): SimulationLink => ({\n      id: `${startVertex ?? -1},${endVertex ?? -1}`,\n      source: startVertex ?? -1,\n      target: endVertex ?? -1,\n      weight,\n      lastActive,\n    }));\n  }, [links]);\n\n  useForceGraph({\n    id: 'bellman-ford',\n    width,\n    height,\n    nodes: simulationNodes,\n    links: simulationLinks,\n    ref: ref.current,\n    nodeId: d => d.id,\n    nodeText: d => `${d.id === -1 ? 'min' : d.id === 0 ? 'z' : 'x' + d.id} : ${d.distance}`,\n    nodeFill: d3.schemeSet2[2],\n    nodeFillNew: d3.schemeAccent[4],\n    linkId: d => d.id,\n    linkActive: d => d.lastActive,\n    linkDistance: _d => 20,\n    linkText: d => `${d.weight}`,\n    linkStroke: d3.schemeSet2[7],\n    linkStrokeNew: d3.schemeAccent[7],\n  });\n\n  return (\n    <svg\n      width={width}\n      height={height}\n      viewBox={`${- width / 2} ${- height / 2} ${width} ${height}`}\n      ref={ref}\n    />\n  );\n};\n","import * as d3 from \"d3\";\nimport React, { Fragment } from \"react\";\n\nexport const haskellCallWrapper = <T extends any[]>(haskell: (cb: (...args: T) => void) => void): T => {\n  let v: T;\n\n  haskell((...args) => {\n    v = args;\n  });\n\n  return v!;\n}\n\nexport const stepsExcept: (step: SatyrosAPI['step'], cbs: Partial<SatyrosEffectCallback>) => SatyrosEffectCallback = (step, cbs) => {\n  return Object.assign(oneStep(() => { step(stepsExcept(step, cbs)); }, () => { step(stepsExcept(step, cbs)); }, () => { throw new Error('Why Result?!'); }), cbs);\n}\n\nexport const stepsUntil: (step: SatyrosAPI['step'], key: keyof SatyrosEffectCallback, cb: () => void) => SatyrosEffectCallback = (step, key, cb) => stepsExcept(step, { [key]: cb });\n\nexport const oneStep: (qfidlStep: () => void, satStep: () => void, resultStep: (r: boolean) => void) => SatyrosEffectCallback = (qfidlStep, satStep, resultStep) => ({\n  Start() {},\n  NegativeCyclePass: qfidlStep,\n  NegativeCycleFind: qfidlStep,\n  NegativeCycleCheck: qfidlStep,\n  PropagationEnd: qfidlStep,\n  PropagationNth: qfidlStep,\n  PropagationFindShorter: qfidlStep,\n  PropagationCheck: qfidlStep,\n  BacktraceComplete: satStep,\n  BacktraceExhaustion: satStep,\n  DecisionComplete: satStep,\n  DecisionResult: satStep,\n  BCPConflictDrivenClause: satStep,\n  BCPConflict: satStep,\n  BCPComplete: satStep,\n  BCPUnitClause: satStep,\n  Finish: resultStep,\n});\n\nexport const undosExcept: (undo: SatyrosAPI['undo'], cbs: Partial<SatyrosEffectCallback>) => SatyrosEffectCallback = (undo, cbs) => {\n  return Object.assign(oneUndo(() => { undo(undosExcept(undo, cbs)); }, () => { undo(undosExcept(undo, cbs)); }, () => { throw new Error('Why Start?!'); }), cbs);\n}\n\nexport const undosUntil: (undo: SatyrosAPI['undo'], key: keyof SatyrosEffectCallback, cb: () => void) => SatyrosEffectCallback = (undo, key, cb) => undosExcept(undo, { [key]: cb });\n\nexport const oneUndo: (qfidlUndo: () => void, satUndo: () => void, startUndo: (repeated: boolean) => void) => SatyrosEffectCallback = (qfidlUndo, satUndo, startUndo) => ({\n  Start: startUndo,\n  NegativeCyclePass: qfidlUndo,\n  NegativeCycleFind: qfidlUndo,\n  NegativeCycleCheck: qfidlUndo,\n  PropagationEnd: qfidlUndo,\n  PropagationNth: qfidlUndo,\n  PropagationFindShorter: qfidlUndo,\n  PropagationCheck: qfidlUndo,\n  BacktraceComplete: satUndo,\n  BacktraceExhaustion: satUndo,\n  DecisionComplete: satUndo,\n  DecisionResult: satUndo,\n  BCPConflictDrivenClause: satUndo,\n  BCPConflict: satUndo,\n  BCPComplete: satUndo,\n  BCPUnitClause: satUndo,\n  Finish() {},\n});\n\nexport const operatorToString = (operator: Operator): string => {\n  switch (operator) {\n    case \"::<?\": return \"<\";\n    case \"::<=?\": return \"≤\";\n    case \"::>?\": return \">\";\n    case \"::>=?\": return \"≥\";\n    case \"::<>?\": return \"≠\";\n    case \"::=?\": return \"=\";\n  }\n}\n\nexport const expressibleToExpressedFormula = (expressible: Expressible): FormulaLike<Expressed> => {\n  if (expressible.length === 3) {\n    expressible = [expressible[0], 0, expressible[1], expressible[2]];\n  }\n\n  switch (expressible[2]) {\n    case '::<?': return [[[expressible[0], expressible[1], Math.ceil(expressible[3] - 1)]]];\n    case '::<=?': return [[[expressible[0], expressible[1], Math.floor(expressible[3])]]];\n    case '::>?': return [[[expressible[1], expressible[0], Math.ceil(- expressible[3] - 1)]]];\n    case '::>=?': return [[[expressible[1], expressible[0], Math.floor(- expressible[3])]]];\n    case '::=?': return [[[expressible[0], expressible[1], Math.floor(expressible[3])]], [[expressible[1], expressible[0], Math.floor(- expressible[3])]]];\n    case '::<>?': return [[[expressible[0], expressible[1], Math.ceil(expressible[3] - 1)], [expressible[1], expressible[0], Math.ceil(- expressible[3] - 1)]]];\n  }\n};\n\nexport const expressedToString = (expressed: Expressed): string => `${expressed[0] === 0 ? 'z' : 'x' + expressed[0]} - ${expressed[1] === 0 ? 'z' : 'x' + expressed[1]} ≤ ${expressed[2]}`;\n\nexport const expressedToFragment = (expressed: Expressed): React.ReactNode => (\n  <Fragment>\n    {expressed[0] === 0 ? 'z' : <Fragment>x<sub>{expressed[0]}</sub></Fragment>} - {expressed[1] === 0 ? 'z' : <Fragment>x<sub>{expressed[1]}</sub></Fragment>} ≤ {expressed[2]}\n  </Fragment>\n);\n\nexport const expressibleToString = (expressible: Expressible): string => {\n  if (expressible.length === 3) {\n    return `x${expressible[0]} ${operatorToString(expressible[1])} ${expressible[2]}`;\n  } else {\n    return `x${expressible[0]} - x${expressible[1]} ${operatorToString(expressible[2])} ${expressible[3]}`;\n  }\n};\n\nexport const expressedFormulaToString = (expressedFormula: FormulaLike<Expressed>): string => {\n  return expressedFormula.map(v => v.map(e => expressedToString(e)).join(' ∨ ')).join(' ∧ ');\n};\n\nexport const expressedFormulaToFragment = (expressedFormula: FormulaLike<Expressed>): React.ReactNode => {\n  return expressedFormula.map(\n    (expressedClause, i) => (\n      <Fragment key={i}>\n        {i === 0 ? null : ' ∧ '}\n        {\n          expressedClause.map(\n            (expressed, i) => (\n              <Fragment key={i}>\n                {i === 0 ? null : ' ∨ '}\n                {expressedToFragment(expressed)}\n              </Fragment>\n            )\n          )\n        }\n      </Fragment>\n    ),\n  );\n};\n\nexport const d3fyExpressibleFormula = (expressibleFormula: FormulaLike<Expressible>, e: SVGSVGElement, width: number): void => {\n  const space = 70;\n  const svg = d3.select(e);\n\n  const expressibleG = svg\n    .selectAll('g.expressed')\n    .data([0])\n    .join('g')\n    .classed('expressible', true)\n    .attr('transform', `translate(${width / 2 - expressibleFormula.flat().length * space + space}, 40)`)\n\n  const expressibleClauseG = expressibleG\n    .selectChildren('g.expressible-clause')\n    .data(expressibleFormula)\n    .join('g')\n    .classed('expressible-clause', true)\n    .attr('transform', (_d, i) => `translate(${expressibleFormula.slice(0, i).flat().length * 2 * space}, 0)`);\n\n  expressibleClauseG\n    .selectChildren('g.expressible-literal')\n    .data(d => d)\n    .join(enter => {\n      const g = enter.append('g');\n\n      g.append('text')\n        .text(expressibleToString)\n        .attr('text-anchor', 'middle')\n        .attr('y', 40)\n        .attr('font-size', '18px');\n\n      g.append('circle')\n        .attr('cx', 0)\n        .attr('cy', 10)\n        .attr('r', 10);\n\n      return g;\n    })\n    .classed('expressible-literal', true)\n    .attr('transform', (_d, i) => `translate(${i * 2 * space}, 0)`);\n\n  expressibleClauseG\n    .selectChildren('g.expressible-literal-con')\n    .data(d => d.slice(1))\n    .join('g')\n    .classed('expressible-literal-con', true)\n    .attr('transform', (_d, i) => `translate(${i * 2 * space + space}, 0)`)\n    .append('text')\n    .text('∨')\n    .attr('text-anchor', 'middle')\n    .attr('y', 30)\n    .attr('font-size', '40px');\n\n  expressibleG\n    .selectChildren('g.expressible-clause-con')\n    .data(expressibleFormula.slice(1))\n    .join('g')\n    .classed('expressible-clause-con', true)\n    .attr('transform', (_d, i) => `translate(${expressibleFormula.slice(0, i + 1).flat().length * 2 * space - space}, 0)`)\n    .append('text')\n    .text('∧')\n    .attr('text-anchor', 'middle')\n    .attr('y', 30)\n    .attr('font-size', '40px');\n}\n\nexport const d3fyExpressedFormula = (expressedFormula: FormulaLike<Expressed>, e: SVGSVGElement, width: number): void => {\n  const space = 70;\n  const expressedG = d3.select(e)\n    .selectAll('g.expressed')\n    .data([0])\n    .join('g')\n    .classed('expressed', true)\n    .attr('transform', `translate(${width / 2 - expressedFormula.flat().length * space + space}, 40)`)\n\n  const expressedClauseG = expressedG\n    .selectChildren('g.expressed-clause')\n    .data(expressedFormula)\n    .join('g')\n    .classed('expressed-clause', true)\n    .attr('transform', (_d, i) => `translate(${expressedFormula.slice(0, i).flat().length * 2 * space}, 0)`);\n\n  expressedClauseG\n    .selectChildren('g.expressed-literal')\n    .data(d => d)\n    .join(enter => {\n      const g = enter.append('g');\n\n      g.append('text')\n        .text(expressedToString)\n        .attr('text-anchor', 'middle')\n        .attr('y', 40)\n        .attr('font-size', '18px');\n\n      g.append('circle')\n        .attr('cx', 0)\n        .attr('cy', 10)\n        .attr('r', 10);\n\n      return g;\n    })\n    .classed('expressed-literal', true)\n    .attr('transform', (_d, i) => `translate(${i * 2 * space}, 0)`);\n\n  expressedClauseG\n    .selectChildren('g.expressed-literal-con')\n    .data(d => d.slice(1))\n    .join('g')\n    .classed('expressed-literal-con', true)\n    .attr('transform', (_d, i) => `translate(${i * 2 * space + space}, 0)`)\n    .append('text')\n    .text('∨')\n    .attr('text-anchor', 'middle')\n    .attr('y', 30)\n    .attr('font-size', '40px');\n\n  expressedG\n    .selectChildren('g.expressed-clause-con')\n    .data(expressedFormula.slice(1))\n    .join('g')\n    .classed('expressed-clause-con', true)\n    .attr('transform', (_d, i) => `translate(${expressedFormula.slice(0, i + 1).flat().length * 2 * space - space}, 0)`)\n    .append('text')\n    .text('∧')\n    .attr('text-anchor', 'middle')\n    .attr('y', 30)\n    .attr('font-size', '40px');\n}\n","import React from 'react';\n\nimport { useSatyrosAPI } from '../hook/useSatyrosAPI';\nimport { BellmanFordGraph } from './BellmanFordGraph';\nimport { stepsExcept, oneStep } from '../Util';\n\nconst f: FormulaLike<Expressible> =\n  [\n    [\n      [1, 2, '::<=?', 4],\n    ],\n    [\n      [2, 3, '::<=?', 5],\n    ],\n    [\n      [3, 1, '::<=?', -10],\n    ],\n  ];\n\nconst Example1: React.FunctionComponent = () => {\n  const satyrosAPI = useSatyrosAPI(f);\n  const [stage, setStage] = React.useState<number>(0);\n  const [bellmanFordNodes, setBellmanFordNodes] = React.useState<SatyrosBellmanFordVertex[]>([]);\n  const [bellmanFordLinks, setBellmanFordLinks] = React.useState<SatyrosBellmanFordEdge[]>([]);\n\n  const satStep = React.useCallback(() => {\n    satyrosAPI!.getBellmanFordGraph((ns, ls) => {\n      setBellmanFordNodes(ns);\n      setBellmanFordLinks(ls);\n    });\n  }, [satyrosAPI]);\n  const qfidlStep = satStep;\n  const step = React.useCallback(() => {\n    switch (stage) {\n      case 0:\n        setStage(s => s + 1);\n        satyrosAPI!.step(stepsExcept(\n          cb => {\n            setStage(s => s + 1);\n            satyrosAPI!.step(cb);\n          },\n          {\n            DecisionComplete() {\n              setStage(s => s + 1);\n              satyrosAPI!.step(oneStep(qfidlStep, satStep, () => {}));\n            },\n          },\n        ));\n        break;\n      default:\n        break;\n    }\n  }, [satyrosAPI, stage, satStep, qfidlStep]);\n  const reset = React.useCallback(() => {\n    satyrosAPI!.reset();\n    setStage(0);\n    setBellmanFordNodes([]);\n    setBellmanFordLinks([]);\n  }, [satyrosAPI]);\n\n  if (satyrosAPI === undefined) {\n    return null;\n  } else {\n    return (\n      <div style={{ display: 'block', width: 640, margin: '0 auto' }}>\n        <button disabled={stage === 0} onClick={reset}>Reset</button>\n        <button disabled={stage === 3} onClick={step}>Construct</button>\n        <br />\n        <BellmanFordGraph\n          width={640}\n          height={400}\n          nodes={bellmanFordNodes}\n          links={bellmanFordLinks}\n        />\n      </div>\n    );\n  }\n};\n\nexport default Example1;\n","import React from 'react';\n\nimport { useSatyrosAPI } from '../hook/useSatyrosAPI';\nimport { BellmanFordGraph } from './BellmanFordGraph';\nimport { stepsExcept, undosExcept } from '../Util';\n\nconst f: FormulaLike<Expressible> =\n  [\n    [\n      [1, 2, '::<=?', 4],\n    ],\n    [\n      [2, 3, '::<=?', 5],\n    ],\n    [\n      [3, 1, '::<=?', -10],\n    ],\n  ];\n\nconst Example2: React.FunctionComponent = () => {\n  const satyrosAPI = useSatyrosAPI(f);\n  const [stage, setStage] = React.useState<number>(0);\n  const [skipStep, setSkipStep] = React.useState<boolean>(false);\n  const [skipUndo, setSkipUndo] = React.useState<boolean>(false);\n  const [bellmanFordNodes, setBellmanFordNodes] = React.useState<SatyrosBellmanFordVertex[]>([]);\n  const [bellmanFordLinks, setBellmanFordLinks] = React.useState<SatyrosBellmanFordEdge[]>([]);\n\n  const satStep = React.useCallback(() => {\n    satyrosAPI!.getBellmanFordGraph((ns, ls) => {\n      setBellmanFordNodes(ns);\n      setBellmanFordLinks(ls);\n    });\n  }, [satyrosAPI]);\n  const qfidlStep = satStep;\n  const satUndo = React.useCallback(() => {\n    satyrosAPI!.getBellmanFordGraph((ns, ls) => {\n      setBellmanFordNodes(ns);\n      setBellmanFordLinks(ls);\n    });\n  }, [satyrosAPI]);\n  const qfidlUndo = satUndo;\n  const step = React.useCallback(() => {\n    switch (stage) {\n      case 23:\n        break;\n      default:\n        setStage(s => s + 1);\n        satyrosAPI!.step(stepsExcept(\n          cb => {\n            setStage(s => s + 1);\n            satyrosAPI!.step(cb);\n          },\n          {\n            PropagationCheck() {\n              console.log('PropagationCheck', stage);\n              if ([4, 11, 13].includes(stage)) {\n                setSkipStep(true);\n              } else {\n                qfidlStep();\n              }\n            },\n            PropagationFindShorter() {\n              console.log('PropagationFindShorter');\n              qfidlStep();\n            },\n            PropagationEnd() {\n              console.log('PropagationEnd', stage);\n              qfidlStep();\n            },\n          },\n        ));\n        break;\n    }\n  }, [satyrosAPI, stage, qfidlStep]);\n  const undo = React.useCallback(() => {\n    switch (stage) {\n      case 4:\n        setStage(s => s - 1);\n        satyrosAPI!.undo(undosExcept(\n          cb => {\n            setStage(s => s - 1);\n            satyrosAPI!.undo(cb);\n          },\n          {\n            Start() {\n              qfidlUndo();\n            },\n          },\n        ));\n        break;\n      default:\n        setStage(s => s - 1);\n        satyrosAPI!.undo(undosExcept(\n          cb => {\n            setStage(s => s - 1);\n            satyrosAPI!.undo(cb);\n          },\n          {\n            PropagationCheck() {\n              console.log('PropagationCheck', stage);\n              if ([6, 14, 15].includes(stage)) {\n                setSkipUndo(true);\n              } else {\n                qfidlUndo();\n              }\n            },\n            PropagationFindShorter() {\n              console.log('PropagationFindShorter');\n              qfidlUndo();\n            },\n            PropagationEnd() {\n              console.log('PropagationEnd');\n              qfidlUndo();\n            },\n            Start() {\n              console.log('Start');\n              qfidlUndo();\n            },\n          },\n        ));\n        break;\n    }\n  }, [satyrosAPI, stage, qfidlUndo]);\n  const reset = React.useCallback(() => {\n    satyrosAPI!.reset();\n    setStage(0);\n    setBellmanFordNodes([]);\n    setBellmanFordLinks([]);\n  }, [satyrosAPI]);\n\n  React.useEffect(() => {\n    if (skipStep) {\n      setSkipStep(false);\n      step();\n    }\n  }, [skipStep, step]);\n\n  React.useEffect(() => {\n    if (skipUndo) {\n      setSkipUndo(false);\n      undo();\n    }\n  }, [skipUndo, undo]);\n\n  if (satyrosAPI === undefined) {\n    return null;\n  } else {\n    return (\n      <div style={{ display: 'block', width: 640, margin: '0 auto' }}>\n        <button disabled={stage === 0} onClick={reset}>Reset</button>\n        <button disabled={stage === 0} onClick={undo}>{'<'} Undo</button>\n        <button disabled={stage === 23} onClick={step}>Step {'>'}</button>\n        <br />\n        <BellmanFordGraph\n          width={640}\n          height={400}\n          nodes={bellmanFordNodes}\n          links={bellmanFordLinks}\n        />\n      </div>\n    );\n  }\n};\n\nexport default Example2;\n","import React from 'react';\n\nimport { useSatyrosAPI } from '../hook/useSatyrosAPI';\nimport { BellmanFordGraph } from './BellmanFordGraph';\nimport { stepsExcept, undosExcept } from '../Util';\n\nconst f: FormulaLike<Expressible> =\n  [\n    [\n      [1, 4, '::<=?', 2],\n    ],\n    [\n      [1, 2, '::<=?', 4],\n    ],\n    [\n      [2, 1, '::<=?', -4],\n    ],\n    [\n      [2, 3, '::<=?', 5],\n    ],\n    [\n      [3, 4, '::<=?', -1],\n    ],\n  ];\n\nconst Example3: React.FunctionComponent = () => {\n  const satyrosAPI = useSatyrosAPI(f);\n  const [stage, setStage] = React.useState<number>(0);\n  const [skipStep, setSkipStep] = React.useState<boolean>(false);\n  const [skipUndo, setSkipUndo] = React.useState<boolean>(false);\n  const [bellmanFordNodes, setBellmanFordNodes] = React.useState<SatyrosBellmanFordVertex[]>([]);\n  const [bellmanFordLinks, setBellmanFordLinks] = React.useState<SatyrosBellmanFordEdge[]>([]);\n\n  const satStep = React.useCallback(() => {\n    satyrosAPI!.getBellmanFordGraph((ns, ls) => {\n      setBellmanFordNodes(ns);\n      setBellmanFordLinks(ls);\n    });\n  }, [satyrosAPI]);\n  const qfidlStep = satStep;\n  const satUndo = React.useCallback(() => {\n    satyrosAPI!.getBellmanFordGraph((ns, ls) => {\n      setBellmanFordNodes(ns);\n      setBellmanFordLinks(ls);\n    });\n  }, [satyrosAPI]);\n  const qfidlUndo = satUndo;\n  const step = React.useCallback(() => {\n    switch (stage) {\n      case 0:\n        setStage(s => s + 1);\n        satyrosAPI!.step(stepsExcept(\n          cb => {\n            setStage(s => s + 1);\n            satyrosAPI!.step(cb);\n          },\n          {\n            PropagationCheck() {\n              console.log('PropagationCheck', stage);\n              qfidlStep();\n            },\n          },\n        ));\n        break;\n      case 51:\n        break;\n      default:\n        setStage(s => s + 1);\n        satyrosAPI!.step(stepsExcept(\n          cb => {\n            setStage(s => s + 1);\n            satyrosAPI!.step(cb);\n          },\n          {\n            PropagationFindShorter() {\n              console.log('PropagationFindShorter', stage);\n              qfidlStep();\n            },\n            Finish() {\n              console.log('Finish', stage);\n              qfidlStep();\n            },\n          },\n        ));\n        break;\n    }\n  }, [satyrosAPI, stage, qfidlStep]);\n  const undo = React.useCallback(() => {\n    switch (stage) {\n      case 4:\n        setStage(s => s - 1);\n        satyrosAPI!.undo(undosExcept(\n          cb => {\n            setStage(s => s - 1);\n            satyrosAPI!.undo(cb);\n          },\n          {\n            Start() {\n              qfidlUndo();\n            },\n          },\n        ));\n        break;\n      default:\n        setStage(s => s - 1);\n        satyrosAPI!.undo(undosExcept(\n          cb => {\n            setStage(s => s - 1);\n            satyrosAPI!.undo(cb);\n          },\n          {\n            PropagationCheck() {\n              console.log('PropagationCheck');\n              if (stage !== 5) {\n                setSkipUndo(true);\n              } else {\n                qfidlUndo();\n              }\n            },\n            PropagationFindShorter() {\n              console.log('PropagationFindShorter', stage);\n              qfidlUndo();\n            },\n            Start() {\n              console.log('Start', stage);\n              qfidlUndo();\n            },\n          },\n        ));\n        break;\n    }\n  }, [satyrosAPI, stage, qfidlUndo]);\n  const reset = React.useCallback(() => {\n    satyrosAPI!.reset();\n    setStage(0);\n    setBellmanFordNodes([]);\n    setBellmanFordLinks([]);\n  }, [satyrosAPI]);\n\n  React.useEffect(() => {\n    if (skipStep) {\n      setSkipStep(false);\n      step();\n    }\n  }, [skipStep, step]);\n\n  React.useEffect(() => {\n    if (skipUndo) {\n      setSkipUndo(false);\n      undo();\n    }\n  }, [skipUndo, undo]);\n\n  console.log(stage);\n  if (satyrosAPI === undefined) {\n    return null;\n  } else {\n    return (\n      <div style={{ display: 'block', width: 640, margin: '0 auto' }}>\n        <button disabled={stage === 0} onClick={reset}>Reset</button>\n        <button disabled={stage === 0} onClick={undo}>{'<'} Undo</button>\n        <button disabled={stage === 51} onClick={step}>Step to next distance update {'>'}</button>\n        <br />\n        <BellmanFordGraph\n          width={640}\n          height={400}\n          nodes={bellmanFordNodes}\n          links={bellmanFordLinks}\n        />\n      </div>\n    );\n  }\n};\n\nexport default Example3;\n","import * as d3 from 'd3';\nimport React from 'react';\nimport usePrevious from '@react-hook/previous';\n\nimport { expressibleToExpressedFormula } from '../Util';\n\ninterface Props {\n  width: number;\n  height: number;\n  expressible: Expressible;\n  processed: boolean;\n}\n\nconst PreprocessGraph: React.FunctionComponent<Props> = ({\n  width, height, expressible, processed\n}) => {\n  const ref = React.useRef<SVGSVGElement>(null);\n  const padding = 30;\n  const ratio = height / width;\n  const xScale = d3.scaleLinear([-5, 5], [-width/2 + padding, width/2 - padding]);\n  const yScale = d3.scaleLinear([-5 * ratio, 5 * ratio], [height/2 - padding, -height/2 + padding]);\n  const prevOp = usePrevious(expressible.length === 3 ? expressible[1] : expressible[2]);\n  const prevProcessed = usePrevious(processed);\n\n  React.useEffect(() => {\n    const svg = d3.select(ref.current);\n\n    svg.append('clipPath')\n      .attr('id', 'graph-area')\n      .append('rect')\n      .attr('x', -width/2 + padding)\n      .attr('y', -height/2 + padding)\n      .attr('width', width - 2 * padding)\n      .attr('height', height - 2 * padding)\n\n    const xAxis = d3.axisBottom(xScale)\n      .ticks(10)\n      .tickSizeInner(-height + 2 * padding)\n      .tickSizeOuter(0)\n      .tickPadding(padding/2);\n    const yAxis = d3.axisLeft(yScale)\n      .ticks(7)\n      .tickSizeInner(-width + 2 * padding)\n      .tickSizeOuter(0)\n      .tickPadding(padding/2);\n\n    const xAxisG = svg.append('g')\n      .attr('transform', `translate(0, ${height/2 - padding})`)\n      .call(xAxis);\n\n    const yAxisG = svg.append('g')\n      .attr('transform', `translate(${-width/2 + padding}, 0)`)\n      .call(yAxis);\n\n    xAxisG\n      .call(g => {\n        g.selectAll('.tick line')\n          .attr('stroke', d3.schemeSet2[7]);\n\n        g.selectAll('.tick').lower();\n      });\n\n    yAxisG\n      .call(g => {\n        g.selectAll('.tick line')\n          .attr('stroke', d3.schemeSet2[7]);\n\n        g.selectAll('.tick').lower();\n      });\n\n    svg.append('line')\n      .attr('x1', -0.5)\n      .attr('y1', -height/2 + padding)\n      .attr('x2', -0.5)\n      .attr('y2', height/2 - padding)\n      .attr('stroke', 'black')\n      .attr('stroke-width', 1);\n\n    svg.append('line')\n      .attr('x1', -width/2 + padding)\n      .attr('y1', 0.5)\n      .attr('x2', width/2 - padding)\n      .attr('y2', 0.5)\n      .attr('stroke', 'black')\n      .attr('stroke-width', 1);\n\n    svg.append('g')\n      .classed('expression-graph', true);\n\n    return () => {\n      svg.selectAll().remove();\n    };\n  }, [width, height, xScale, yScale]);\n\n  React.useEffect(() => {\n    let pathTransition = d3.select(ref.current)\n      .selectChild('g.expression-graph')\n      .selectChildren('path.expressible')\n      .data([0])\n      .join('path')\n      .classed('expressible', true)\n      .attr('clip-path', 'url(#graph-area)')\n      .transition()\n      .duration(300)\n      .ease(d3.easeLinear)\n      .attr('stroke-width', 3)\n      .attr('fill', d3.schemeAccent[3]);\n\n    if (prevProcessed === processed && !processed && prevOp !== (expressible.length === 3 ? expressible[1] : expressible[2])) {\n      pathTransition = pathTransition.transition()\n        .ease(d3.easeLinear)\n        .duration(150)\n        .attr('opacity', 0)\n        .transition()\n        .ease(d3.easeLinear)\n        .delay(150)\n        .duration(150)\n        .attr('opacity', 0.8);\n    } else {\n      pathTransition = pathTransition\n        .attr('opacity', processed ? 0 : 0.8);\n    }\n\n    const line = d3.path();\n\n    if (expressible.length === 3) {\n      switch (expressible[1]) {\n        case '::<=?': {\n          line.moveTo(xScale(expressible[2]), yScale(yScale.domain()[0] - 10));\n          line.lineTo(xScale(expressible[2]), yScale(yScale.domain()[1] + 10));\n          line.lineTo(xScale(xScale.domain()[0] - 10), yScale(yScale.domain()[1] + 10));\n          line.lineTo(xScale(xScale.domain()[0] - 10), yScale(yScale.domain()[0] - 10));\n          line.closePath();\n          pathTransition.attr('d', line.toString())\n            .attr('stroke', d3.schemeSet1[5]);\n          break;\n        }\n        case '::<?': {\n          line.moveTo(xScale(expressible[2]), yScale(yScale.domain()[0] - 10));\n          line.lineTo(xScale(expressible[2]), yScale(yScale.domain()[1] + 10));\n          line.lineTo(xScale(xScale.domain()[0] - 10), yScale(yScale.domain()[1] + 10));\n          line.lineTo(xScale(xScale.domain()[0] - 10), yScale(yScale.domain()[0] - 10));\n          line.closePath();\n          pathTransition.attr('d', line.toString())\n            .attr('stroke', '#FFF');\n          break;\n        }\n        case '::>=?': {\n          line.moveTo(xScale(expressible[2]), yScale(yScale.domain()[0] - 10));\n          line.lineTo(xScale(expressible[2]), yScale(yScale.domain()[1] + 10));\n          line.lineTo(xScale(xScale.domain()[1] + 10), yScale(yScale.domain()[1] + 10));\n          line.lineTo(xScale(xScale.domain()[1] + 10), yScale(yScale.domain()[0] - 10));\n          line.closePath();\n          pathTransition.attr('d', line.toString())\n            .attr('stroke', d3.schemeSet1[5]);\n          break;\n        }\n        case '::>?': {\n          line.moveTo(xScale(expressible[2]), yScale(yScale.domain()[0] - 10));\n          line.lineTo(xScale(expressible[2]), yScale(yScale.domain()[1] + 10));\n          line.lineTo(xScale(xScale.domain()[1] + 10), yScale(yScale.domain()[1] + 10));\n          line.lineTo(xScale(xScale.domain()[1] + 10), yScale(yScale.domain()[0] - 10));\n          line.closePath();\n          pathTransition.attr('d', line.toString())\n            .attr('stroke', '#FFF');\n          break;\n        }\n        case '::=?': {\n          line.moveTo(xScale(expressible[2]), yScale(yScale.domain()[0] - 10));\n          line.lineTo(xScale(expressible[2]), yScale(yScale.domain()[1] + 10));\n          pathTransition.attr('d', line.toString())\n            .attr('stroke', d3.schemeSet1[5]);\n          break;\n        }\n        case '::<>?': {\n          line.moveTo(xScale(expressible[2]), yScale(yScale.domain()[0] - 10));\n          line.lineTo(xScale(expressible[2]), yScale(yScale.domain()[1] + 10));\n          line.lineTo(xScale(xScale.domain()[0] - 10), yScale(yScale.domain()[1] + 10));\n          line.lineTo(xScale(xScale.domain()[0] - 10), yScale(yScale.domain()[0] - 10));\n          line.closePath();\n          line.moveTo(xScale(expressible[2]), yScale(yScale.domain()[0] - 10));\n          line.lineTo(xScale(expressible[2]), yScale(yScale.domain()[1] + 10));\n          line.lineTo(xScale(xScale.domain()[1] + 10), yScale(yScale.domain()[1] + 10));\n          line.lineTo(xScale(xScale.domain()[1] + 10), yScale(yScale.domain()[0] - 10));\n          line.closePath();\n          pathTransition.attr('d', line.toString())\n            .attr('stroke', '#FFF');\n          break;\n        }\n      }\n    } else {\n      switch (expressible[2]) {\n        case '::<=?': {\n          line.moveTo(xScale(xScale.domain()[0] - 10), yScale(xScale.domain()[0] - 10 - expressible[3]));\n          line.lineTo(xScale(xScale.domain()[1] + 10), yScale(xScale.domain()[1] + 10 - expressible[3]));\n          line.lineTo(xScale(xScale.domain()[0] - 10), yScale(yScale.domain()[1] + 10));\n          line.closePath();\n          pathTransition.attr('d', line.toString())\n            .attr('stroke', d3.schemeSet1[5]);\n          break;\n        }\n        case '::<?': {\n          line.moveTo(xScale(xScale.domain()[0] - 10), yScale(xScale.domain()[0] - 10 - expressible[3]));\n          line.lineTo(xScale(xScale.domain()[1] + 10), yScale(xScale.domain()[1] + 10 - expressible[3]));\n          line.lineTo(xScale(xScale.domain()[0] - 10), yScale(yScale.domain()[1] + 10));\n          line.closePath();\n          pathTransition.attr('d', line.toString())\n            .attr('stroke', '#FFF');\n          break;\n        }\n        case '::>=?': {\n          line.moveTo(xScale(xScale.domain()[0] - 10), yScale(xScale.domain()[0] - 10 - expressible[3]));\n          line.lineTo(xScale(xScale.domain()[1] + 10), yScale(xScale.domain()[1] + 10 - expressible[3]));\n          line.lineTo(xScale(xScale.domain()[1] + 10), yScale(yScale.domain()[0] - 10));\n          line.closePath();\n          pathTransition.attr('d', line.toString())\n            .attr('stroke', d3.schemeSet1[5]);\n          break;\n        }\n        case '::>?': {\n          line.moveTo(xScale(xScale.domain()[0] - 10), yScale(xScale.domain()[0] - 10 - expressible[3]));\n          line.lineTo(xScale(xScale.domain()[1] + 10), yScale(xScale.domain()[1] + 10 - expressible[3]));\n          line.lineTo(xScale(xScale.domain()[1] + 10), yScale(yScale.domain()[0] - 10));\n          line.closePath();\n          pathTransition.attr('d', line.toString())\n            .attr('stroke', '#FFF');\n          break;\n        }\n        case '::=?': {\n          line.moveTo(xScale(xScale.domain()[0] - 10), yScale(xScale.domain()[0] - 10 - expressible[3]));\n          line.lineTo(xScale(xScale.domain()[1] + 10), yScale(xScale.domain()[1] + 10 - expressible[3]));\n          pathTransition.attr('d', line.toString())\n            .attr('stroke', d3.schemeSet1[5]);\n          break;\n        }\n        case '::<>?': {\n          line.moveTo(xScale(xScale.domain()[0] - 10), yScale(xScale.domain()[0] - 10 - expressible[3]));\n          line.lineTo(xScale(xScale.domain()[1] + 10), yScale(xScale.domain()[1] + 10 - expressible[3]));\n          line.lineTo(xScale(xScale.domain()[0] - 10), yScale(yScale.domain()[1] + 10));\n          line.closePath();\n          line.moveTo(xScale(xScale.domain()[0] - 10), yScale(xScale.domain()[0] - 10 - expressible[3]));\n          line.lineTo(xScale(xScale.domain()[1] + 10), yScale(xScale.domain()[1] + 10 - expressible[3]));\n          line.lineTo(xScale(xScale.domain()[1] + 10), yScale(yScale.domain()[0] - 10));\n          line.closePath();\n          pathTransition.attr('d', line.toString())\n            .attr('stroke', '#FFF');\n          break;\n        }\n      }\n    }\n  }, [expressible, processed, prevOp, prevProcessed, xScale, yScale]);\n\n  React.useEffect(() => {\n    let pathTransition = d3.select(ref.current)\n      .selectChild('g.expression-graph')\n      .selectChildren('path.expressed')\n      .data([0])\n      .join('path')\n      .classed('expressed', true)\n      .attr('clip-path', 'url(#graph-area)')\n      .transition()\n      .duration(300)\n      .ease(d3.easeLinear)\n      .attr('stroke-width', 3)\n      .attr('fill', d3.schemeAccent[1])\n      .attr('stroke', d3.schemeSet1[3])\n\n    if (prevProcessed === processed && processed && prevOp !== (expressible.length === 3 ? expressible[1] : expressible[2])) {\n      pathTransition = pathTransition.transition()\n        .ease(d3.easeLinear)\n        .duration(150)\n        .attr('opacity', 0)\n        .transition()\n        .ease(d3.easeLinear)\n        .delay(150)\n        .duration(150)\n        .attr('opacity', 0.8);\n    } else {\n      pathTransition = pathTransition\n        .attr('opacity', processed ? 0.8 : 0);\n    }\n\n    const line = d3.path();\n\n    const expressedFormula = expressibleToExpressedFormula(expressible);\n\n    if (expressedFormula.length === 1) {\n      if (expressedFormula[0].length === 1) {\n        if (expressedFormula[0][0][0] === 0) {\n          line.moveTo(xScale(-expressedFormula[0][0][2]), yScale(yScale.domain()[0]));\n          line.lineTo(xScale(-expressedFormula[0][0][2]), yScale(yScale.domain()[1]));\n          line.lineTo(xScale(xScale.domain()[1] + 10), yScale(yScale.domain()[1] + 10));\n          line.lineTo(xScale(xScale.domain()[1] + 10), yScale(yScale.domain()[0] - 10));\n          line.closePath();\n          pathTransition.attr('d', line.toString());\n        } else if (expressedFormula[0][0][1] === 0) {\n          line.moveTo(xScale(expressedFormula[0][0][2]), yScale(yScale.domain()[0]));\n          line.lineTo(xScale(expressedFormula[0][0][2]), yScale(yScale.domain()[1]));\n          line.lineTo(xScale(xScale.domain()[0] - 10), yScale(yScale.domain()[1] + 10));\n          line.lineTo(xScale(xScale.domain()[0] - 10), yScale(yScale.domain()[0] - 10));\n          line.closePath();\n          pathTransition.attr('d', line.toString());\n        } else if (expressedFormula[0][0][0] === 1) {\n          line.moveTo(xScale(xScale.domain()[0] - 10), yScale(xScale.domain()[0] - 10 - expressedFormula[0][0][2]));\n          line.lineTo(xScale(xScale.domain()[1] + 10), yScale(xScale.domain()[1] + 10 - expressedFormula[0][0][2]));\n          line.lineTo(xScale(xScale.domain()[0] - 10), yScale(yScale.domain()[1] + 10));\n          line.closePath();\n          pathTransition.attr('d', line.toString());\n        } else {\n          line.moveTo(xScale(xScale.domain()[0] - 10), yScale(xScale.domain()[0] - 10 + expressedFormula[0][0][2]));\n          line.lineTo(xScale(xScale.domain()[1] + 10), yScale(xScale.domain()[1] + 10 + expressedFormula[0][0][2]));\n          line.lineTo(xScale(xScale.domain()[1] + 10), yScale(yScale.domain()[0] - 10));\n          line.closePath();\n          pathTransition.attr('d', line.toString());\n        }\n      } else {\n        if (expressedFormula[0][0][0] === 0) {\n          line.moveTo(xScale(expressedFormula[0][0][2]), yScale(yScale.domain()[0]));\n          line.lineTo(xScale(expressedFormula[0][0][2]), yScale(yScale.domain()[1]));\n          line.lineTo(xScale(xScale.domain()[0] - 10), yScale(yScale.domain()[1] + 10));\n          line.lineTo(xScale(xScale.domain()[0] - 10), yScale(yScale.domain()[0] - 10));\n          line.closePath();\n          line.moveTo(xScale(-expressedFormula[0][1][2]), yScale(yScale.domain()[0]));\n          line.lineTo(xScale(-expressedFormula[0][1][2]), yScale(yScale.domain()[1]));\n          line.lineTo(xScale(xScale.domain()[1] + 10), yScale(yScale.domain()[1] + 10));\n          line.lineTo(xScale(xScale.domain()[1] + 10), yScale(yScale.domain()[0] - 10));\n          line.closePath();\n          pathTransition.attr('d', line.toString());\n        } else if (expressedFormula[0][0][1] === 0) {\n          line.moveTo(xScale(-expressedFormula[0][0][2]), yScale(yScale.domain()[0]));\n          line.lineTo(xScale(-expressedFormula[0][0][2]), yScale(yScale.domain()[1]));\n          line.lineTo(xScale(xScale.domain()[1] + 10), yScale(yScale.domain()[1] + 10));\n          line.lineTo(xScale(xScale.domain()[1] + 10), yScale(yScale.domain()[0] - 10));\n          line.closePath();\n          line.moveTo(xScale(expressedFormula[0][1][2]), yScale(yScale.domain()[0]));\n          line.lineTo(xScale(expressedFormula[0][1][2]), yScale(yScale.domain()[1]));\n          line.lineTo(xScale(xScale.domain()[0] - 10), yScale(yScale.domain()[1] + 10));\n          line.lineTo(xScale(xScale.domain()[0] - 10), yScale(yScale.domain()[0] - 10));\n          line.closePath();\n          pathTransition.attr('d', line.toString());\n        } else {\n          line.moveTo(xScale(xScale.domain()[0] - 10), yScale(xScale.domain()[0] - 10 + expressedFormula[0][1][2]));\n          line.lineTo(xScale(xScale.domain()[1] + 10), yScale(xScale.domain()[1] + 10 + expressedFormula[0][1][2]));\n          line.lineTo(xScale(xScale.domain()[1] + 10), yScale(yScale.domain()[0] - 10));\n          line.closePath();\n          line.moveTo(xScale(xScale.domain()[0] - 10), yScale(xScale.domain()[0] - 10 - expressedFormula[0][0][2]));\n          line.lineTo(xScale(xScale.domain()[1] + 10), yScale(xScale.domain()[1] + 10 - expressedFormula[0][0][2]));\n          line.lineTo(xScale(xScale.domain()[0] - 10), yScale(yScale.domain()[1] + 10));\n          line.closePath();\n          pathTransition.attr('d', line.toString());\n        }\n      }\n    } else {\n      if (expressedFormula[0][0][0] === 0) {\n        if (expressedFormula[0][0][2] === - expressedFormula[1][0][2]) {\n          line.moveTo(xScale(-expressedFormula[0][0][2]), yScale(yScale.domain()[0] - 10));\n          line.lineTo(xScale(-expressedFormula[0][0][2]), yScale(yScale.domain()[1] + 10));\n        }\n        pathTransition.attr('d', line.toString());\n      } else if (expressedFormula[0][0][1] === 0) {\n        if (expressedFormula[0][0][2] === - expressedFormula[1][0][2]) {\n          line.moveTo(xScale(expressedFormula[0][0][2]), yScale(yScale.domain()[0] - 10));\n          line.lineTo(xScale(expressedFormula[0][0][2]), yScale(yScale.domain()[1] + 10));\n        }\n        pathTransition.attr('d', line.toString());\n      } else {\n        if (expressedFormula[0][0][2] === - expressedFormula[1][0][2]) {\n          line.moveTo(xScale(xScale.domain()[0] - 10), yScale(xScale.domain()[0] - 10 - expressedFormula[0][0][2]));\n          line.lineTo(xScale(xScale.domain()[1] + 10), yScale(xScale.domain()[1] + 10 - expressedFormula[0][0][2]));\n        }\n        pathTransition.attr('d', line.toString());\n      }\n    }\n  }, [expressible, processed, prevOp, prevProcessed, xScale, yScale]);\n\n  return (\n    <svg\n      width={width}\n      height={height}\n      viewBox={`${-width/2} ${-height/2} ${width} ${height}`}\n      ref={ref}\n    />\n  );\n};\n\nexport default PreprocessGraph;\n","import React, { Fragment } from 'react';\n\nimport { expressedFormulaToFragment, expressibleToExpressedFormula, operatorToString } from '../Util';\nimport PreprocessGraph from './PreprocessGraph';\n\nimport './Preprocess.css';\n\ninterface Props {\n  underSAT: boolean;\n}\n\nconst Preprocess: React.FunctionComponent<Props> = ({ underSAT }) => {\n  const [vars, setVars] = React.useState<number>(2);\n  const [op, setOp] = React.useState<Operator>('::<=?');\n  const [r, setR] = React.useState('3');\n  const [processed, setProcessed] = React.useState(false);\n  const handleTypeChange: React.FormEventHandler<HTMLSelectElement> = React.useCallback((e) => {\n    setVars(Number.parseInt(e.currentTarget.value[0], 10));\n    setOp(e.currentTarget.value.slice(1) as Operator);\n  }, [setVars, setOp]);\n  const handleRChange: React.FormEventHandler<HTMLInputElement> = React.useCallback((e) => {\n    setR(e.currentTarget.value);\n  }, [setR]);\n  const handleProcessedChange: React.FormEventHandler<HTMLInputElement> = React.useCallback((e) => {\n    setProcessed(e.currentTarget.checked);\n  }, [setProcessed]);\n  const expressible = React.useMemo<Expressible>(() => vars === 1 ? [1, op, Number.parseFloat(r)] : [1, 2, op, Number.parseFloat(r)], [vars, op, r]);\n\n  return (\n    <div className='Preprocess'>\n      <fieldset className='expression-picker'>\n        <legend>Choose an expression to be converted</legend>\n        <label>\n          Type of operation =\n          <select value={vars + op} onChange={handleTypeChange}>\n            <option label='x₁ - x₂ ≤ r' value='2::<=?' />\n            <option label='x₁ - x₂ < r' value='2::<?' />\n            <option label='x₁ - x₂ ≥ r' value='2::>=?' />\n            <option label='x₁ - x₂ > r' value='2::>=?' />\n            { underSAT ? (\n                <Fragment>\n                  <option label='x₁ - x₂ = r' value='2::=?' />\n                  <option label='x₁ - x₂ ≠ r' value='2::<>?' />\n                </Fragment>\n              ) : null\n            }\n            <option label='x₁ ≤ r' value='1::<=?' />\n            <option label='x₁ < r' value='1::<?' />\n            <option label='x₁ ≥ r' value='1::>=?' />\n            <option label='x₁ > r' value='1::>=?' />\n            { underSAT ? (\n                <Fragment>\n                  <option label='x₁ = r' value='1::=?' />\n                  <option label='x₁ ≠ r' value='1::<>?' />\n                </Fragment>\n              ) : null\n            }\n          </select>\n        </label>\n        <label>\n          Value of r =\n          <div>\n            <input type='range' min='-5' max='5' step='0.1' value={r} onChange={handleRChange} />\n            <input type='number' min='-5' max='5' value={r} onChange={handleRChange} />\n          </div>\n        </label>\n        <br />\n        <br />\n        <label>\n          Convert? <input type='checkbox' checked={processed} onChange={handleProcessedChange} />\n        </label>\n      </fieldset>\n      <div className='expression-viewer'>\n        Original Expression: x<sub>1</sub> {vars === 2 ? (<Fragment>- x<sub>2</sub></Fragment>) : ''} {`${operatorToString(op)} ${r}`}\n        <br />\n        <span className={processed ? '' : 'invisible'}>Processed Expression: {expressedFormulaToFragment(expressibleToExpressedFormula(expressible))}</span>\n      </div>\n      <PreprocessGraph\n        width={640}\n        height={400}\n        processed={processed}\n        expressible={expressible}\n      />\n    </div>\n  );\n};\n\nexport default Preprocess;\n","import React from 'react';\n\nimport Example1 from './Example1';\nimport Example2 from './Example2';\nimport Example3 from './Example3';\nimport Preprocess from './Preprocess';\n\nconst Section2: React.FunctionComponent = () => {\n  return (\n    <section className='Section Section2'>\n      <h2>Your Focus Determines Your Reality… or Your Solvers</h2>\n      <p><span className='initial'>I</span>t is often tedious to encode a problem entirely in boolean logic, and sometimes there is even a domain-specific solvers that is much more efficient than SAT solvers for some parts of your problem, in which case paying SAT encoding cost and introducing NP-complete procedure for the part can slow down the solution search process significantly. This is why many applications of SAT solver often uses Satisfiability \"Modulo Theory\" (referred as \"SMT\" below) solvers instead. In this article, we introduce a Quantifier-free integer difference logic (\"QFIDL\") and its solver shortly, and describes the details of the integration of such \"external\" solvers with SAT solvers.</p>\n      <section className='Subsection Subsection2-1'>\n        <h3>Quantifier Free Integer Difference Logic (QFIDL)</h3>\n        <p>\n          QFIDL is a system that can solves the following question:\n        </p>\n        <blockquote>\n          Suppose that we have integer variables: <var>x<sub>1</sub></var>, <var>x<sub>2</sub></var>, …, <var>x<sub>n</sub></var> and their constraints in a form of <var>x<sub>i</sub></var> - <var>x<sub>j</sub></var> <var>{'['}op{']'}</var> <var>c</var> or <var>x<sub>i</sub></var> <var>{'['}op{']'}</var> <var>c</var>, where <var>c</var> is a real number constant and <var>{'['}op{']'}</var> is one of <var>{'<'}</var>, <var>{'≤'}</var>, <var>{'>'}</var>, <var>{'≥'}</var>. Will there be an assignment for these integer variables so that they satisfies all the given constraints?\n        </blockquote>\n        <p className='indent'>\n          Actually, we can encode these constraints in an even simpler form:\n        </p>\n        <blockquote>\n          Suppose that we have integer variables: <var>x<sub>1</sub></var>, <var>x<sub>2</sub></var>, …, <var>x<sub>n</sub></var> and their constraints in a form of <var>x<sub>i</sub></var> - <var>x<sub>j</sub></var> <var>≤</var> <var>c</var>, where <var>c</var> is an integer number constant. Will there be an assignment for these integer variables so that they satisfies all the given constraints?\n        </blockquote>\n        <p>\n          Here, we removed the constraints only with one variable, restrict <var>c</var> to be an integer, and limits the operator to the \"less than or equal to\" operator. This form is what QFIDL really solves internally.\n        </p>\n        <p className='indent'>\n          How this simplification is possible? Let{'\\''}s check it in its graphical form:\n        </p>\n        <Preprocess underSAT={false} />\n        <p>\n          As you may have noticed, the area that covered by simplified form is not exactly the same. However, since the variables are actually <em>integer</em> variables, we need to focus on integer lattice points covered by those areas, which faithfully agree with each other.\n        </p>\n        <p className='indent'>\n          One thing worth noting that is how we removed one variable constraints. We introduce an auxiliary variable <var>z</var> representing 0, make one variable constraints to two variable constraints with <var>z</var>. We can add this auxiliary variable as (simple version of) QFIDL always works on a difference of two variables. Thus, once we have an satisfying assignment for integer variables, we can add or substract the same amount from all variables to get another satisfying assignment. By adjusting the assigned value for <var>z</var> to be 0, we can derive a solution for \"complex\" form of constraints.\n        </p>\n        <p className='indent'>\n          When we use QFIDL alongside SAT solver, we have conjunctions and disjunctions. This allow us to encode more operators. In the above problem, we can change the list of <var>{'['}op{']'}</var> into:\n        </p>\n        <blockquote>\n          … <var>{'['}op{']'}</var> is one of <var>{'<'}</var>, <var>{'≤'}</var>, <var>{'>'}</var>, <var>{'≥'}</var>, <strong><var>{'='}</var></strong>, <strong><var>{'≠'}</var></strong>. …\n        </blockquote>\n        <p>\n          The simplification of these new operators can also be depicted as a graph:\n        </p>\n        <Preprocess underSAT={true} />\n      </section>\n      <section className='Subsection Subsection2-2'>\n        <h3>QFIDL Solver</h3>\n        <p>\n          How can we solve QFIDL problems? Suppose that we have\n        </p>\n        <blockquote className='math'>\n          <var>x<sub>1</sub></var> - <var>x<sub>2</sub></var> ≤ 4\n          <br />\n          <var>x<sub>2</sub></var> - <var>x<sub>3</sub></var> ≤ 5\n          <br />\n          <var>x<sub>3</sub></var> - <var>x<sub>1</sub></var> ≤ -10\n        </blockquote>\n        <p>\n          We can easily show that there is no satisfying assignment for <var>x<sub>1</sub></var>, <var>x<sub>2</sub></var>, and <var>x<sub>3</sub></var>:\n        </p>\n        <blockquote className='math'>\n          <var>x<sub>1</sub></var> ≤ <var>x<sub>2</sub></var> + 4 ≤ <var>x<sub>3</sub></var> + 9 ≤ <var>x<sub>1</sub></var> - 1\n        </blockquote>\n        <p>\n          i.e., the integer <var>x<sub>1</sub></var> should be smaller than its predecessor, and it is impossible. This procedure can be generalized to any QFIDL problems. We first construct a graph:\n        </p>\n        <Example1 />\n        <p>\n          Here, each node represents a variable, and the special <var>min</var> node represents the minimum variable among all. Each edge represents a difference inequality between two end nodes. For example, when there is an inequality <var>x<sub>1</sub></var> - <var>x<sub>2</sub></var> ≤ 4, we put a edge from the node <var>x<sub>1</sub></var> to the node <var>x<sub>1</sub></var> with the weight of 4.\n        </p>\n        <p className='indent'>\n          Now, we will find shortest path to each node from <var>min</var> node. We used <a href='https://en.wikipedia.org/wiki/Bellman%E2%80%93Ford_algorithm'>Bellman-Ford Algorithm</a> to find the shortest path.\n        </p>\n        <Example2 />\n        <p>\n          After traversing all edges twice, the algorithm finds that there is a negative cycle: <var>x<sub>1</sub></var>-<var>x<sub>2</sub></var>-<var>x<sub>3</sub></var>-<var>x<sub>1</sub></var>. Note that this negative cycle is exactly the sequence we saw in this unsatisfiabilty proof:\n        </p>\n        <blockquote className='math'>\n          <var>x<sub>1</sub></var> ≤ <var>x<sub>2</sub></var> + 4 ≤ <var>x<sub>3</sub></var> + 9 ≤ <var>x<sub>1</sub></var> - 1\n        </blockquote>\n        <p>\n          This is because a negative cycle of the graph encoded in the above-mentioned way appears only when there is such an unsatisfiabilty proof, or rather, it is a direct encoding of an unsatisfiabilty proof. Moreover, this graph method gives a concrete satisfying assignment if there is no negative cycle. Suppose that <var>x<sub>1</sub></var> and <var>x<sub>2</sub></var> have the following constraint:\n        </p>\n        <blockquote className='math'>\n          <var>x<sub>1</sub></var> - <var>x<sub>2</sub></var> ≤ <var>c</var>\n        </blockquote>\n        <p>\n          If <var>d<sub>1</sub></var> and <var>d<sub>2</sub></var> are the shortest path distance to <var>x<sub>1</sub></var> and <var>x<sub>2</sub></var> from <var>min</var>, they should satisfy\n        </p>\n        <blockquote className='math'>\n          - <var>d<sub>1</sub></var> + <var>d<sub>2</sub></var> ≤ <var>c</var>\n        </blockquote>\n        <p>\n          Otherwise, <var>d<sub>1</sub></var> + <var>c</var> is smaller than <var>d<sub>2</sub></var>, and <var>d<sub>2</sub></var> is not the shortest path distance to <var>x<sub>2</sub></var>. In other words, <var>x<sub>1</sub></var> = - <var>d<sub>1</sub></var> and <var>x<sub>2</sub></var> = - <var>d<sub>2</sub></var> should be a satisfying assignment if they are indeed the shortest path distances from <var>min</var>. Here is a satisfiable example:\n        </p>\n        <blockquote className='math'>\n          <var>x<sub>1</sub></var> - <var>x<sub>4</sub></var> ≤ 2\n          <br />\n          <var>x<sub>1</sub></var> - <var>x<sub>2</sub></var> ≤ 4\n          <br />\n          <var>x<sub>2</sub></var> - <var>x<sub>1</sub></var> ≤ -4\n          <br />\n          <var>x<sub>2</sub></var> - <var>x<sub>3</sub></var> ≤ 5\n          <br />\n          <var>x<sub>3</sub></var> - <var>x<sub>4</sub></var> ≤ -1\n        </blockquote>\n        <Example3 />\n        <p>\n          As this example gives the distance -4, 0, 0, -2, the satisfying assignment we can derive from the graph is <var>x<sub>1</sub></var> = 4, <var>x<sub>2</sub></var> = 0, <var>x<sub>3</sub></var> = 0, and <var>x<sub>4</sub></var> = 2. We can check that all the above conditions are met:\n        </p>\n        <blockquote className='math'>\n          <var>x<sub>1</sub></var> - <var>x<sub>4</sub></var> = 4 - 2 ≤ 2\n          <br />\n          <var>x<sub>1</sub></var> - <var>x<sub>2</sub></var> = 4 - 0 ≤ 4\n          <br />\n          <var>x<sub>2</sub></var> - <var>x<sub>1</sub></var> = 0 - 4 ≤ -4\n          <br />\n          <var>x<sub>2</sub></var> - <var>x<sub>3</sub></var> = 0 - 0 ≤ 5\n          <br />\n          <var>x<sub>3</sub></var> - <var>x<sub>4</sub></var> = 0 - 2 ≤ -1\n        </blockquote>\n      </section>\n    </section>\n  );\n};\n\nexport default Section2;\n","import React from 'react';\n\nconst Section3: React.FunctionComponent = () => {\n  return (\n    <section className='Section Section3'>\n      <h2>You{'\\''}ve got a plan, a plan to mix them all</h2>\n      <p><span className='initial'>N</span>ow the question is this: how can we allow QFIDL solver to work with a disjunction of contraints? In other words, how can we combine a SAT solver (boolean solver) and a QFIDL solver into a single solver? There are two simple ways to achieve this integration:</p>\n      <ul>\n        <li>Pick \"true\" constraints by SAT solver first, and apply QFIDL solver on those constraints, until QFIDL solver finds a solution or SAT solver exhausts the possibilities</li>\n        <li>While executing SAT solver, use QFIDL as a conflict-finding algorithm.</li>\n      </ul>\n      <p>We will show these two approaches in turn, and describe how they are different.</p>\n    </section>\n  );\n};\n\nexport default Section3;\n","import React from 'react';\n\nconst References: React.FunctionComponent = () => {\n  return (\n    <section className='Section References'>\n      <h2>References</h2>\n      <ol>\n      <li id='ref-1'>Martin Davis, George Logemann, and Donald Loveland. 1962. A machine program for theorem-proving. Commun. ACM 5, 7 (July 1962), 394–397. <a href='https://doi.org/10.1145/368273.368557'>doi:10.1145/368273.368557</a>. <a href='https://hdl.handle.net/2027%2Fmdp.39015095248095'>hdl:2027/mdp.39015095248095</a>.</li>\n      <li id='ref-2'>Matthew W. Moskewicz, Conor F. Madigan, Ying Zhao, Lintao Zhang, and Sharad Malik. 2001. Chaff: engineering an efficient SAT solver. In <i>Proceedings of the 38th annual Design Automation Conference</i> (<i>DAC {'\\''}01</i>). Association for Computing Machinery, New York, NY, USA, 530–535. <a href='https://doi.org/10.1145/378239.379017'>doi:10.1145/378239.379017</a></li>\n      <li id='ref-3'>João P. Marques Silva and Karem A. Sakallah. 1997. GRASP—a new search algorithm for satisfiability. In Proceedings of the 1996 IEEE/ACM international conference on Computer-aided design (ICCAD {'\\''}96). IEEE Computer Society, USA, 220–227.</li>\n      </ol>\n    </section>\n  );\n};\n\nexport default References;\n","import React from 'react';\n\nimport Section1 from './Section1';\nimport Section2 from './Section2';\nimport Section3 from './Section3';\nimport References from './References';\n\nimport './App.css';\n\nconst App: React.FunctionComponent = () => {\n  return (\n    <article className='App' lang='en'>\n      <h1>Boolean meets Theories: SMT Solvers</h1>\n      <hr />\n      <Section1 />\n      <hr />\n      <Section2 />\n      <hr />\n      <Section3 />\n      <hr />\n      <References />\n    </article>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './component/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}